{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Chat/Chat.jsx\";\nimport React, { Component } from 'react';\nimport Talk from 'talkjs';\nimport { userList, groupList } from '../firebase/firebase.utils';\nimport './chat.css';\nimport Topbar from '../navbar/Topbar';\nimport Progress from '../progress/Progress';\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n    this.state = {\n      groupUsers: ''\n    };\n  }\n\n  async componentDidMount() {\n    const setParticipants = (users, currentUser) => {\n      let x = [];\n      users.map((el, i) => {\n        if (el.id !== currentUser) {\n          console.log(el);\n          x.push(new Talk.User({\n            id: el.id,\n            name: el.name,\n            email: el.email\n          }));\n        }\n      });\n      console.log(x);\n      return x;\n    };\n\n    const currentUser = this.props.currentUser; // let groupUsers = await userList();\n\n    let groupUsers = await groupList(currentUser.currentTrip);\n    this.setState({\n      groupUsers: groupUsers\n    });\n    Talk.ready.then(() => {\n      console.log('running talk ready');\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email\n      });\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me\n      });\n      console.log('before');\n      let participants = setParticipants(this.state.groupUsers, currentUser.id);\n      console.log(participants);\n      var conversation = window.talkSession.getOrCreateConversation(this.props.chatID); // var conversation = window.talkSession.getOrCreateConversation(\n      //   this.props.match.params.id\n      // );\n\n      conversation.setParticipant(me);\n      console.log('at participants');\n      participants.map(el => {\n        conversation.setParticipant(el);\n      });\n      conversation.setAttributes({\n        photoUrl: 'https://avatars0.githubusercontent.com/u/4854004?s=280&v=4',\n        subject: 'Bahamas'\n      });\n      var chatbox = window.talkSession.createChatbox(conversation);\n      chatbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    console.log(this.state.groupUsers);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, this.state.groupUsers ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox-container\",\n      ref: this.talkjsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(Progress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 101\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Chat/Chat.jsx"],"names":["React","Component","Talk","userList","groupList","Topbar","Progress","Chat","constructor","props","talkjsContainer","createRef","state","groupUsers","componentDidMount","setParticipants","users","currentUser","x","map","el","i","id","console","log","push","User","name","email","currentTrip","setState","ready","then","me","displayName","window","talkSession","Session","appId","participants","conversation","getOrCreateConversation","chatID","setParticipant","setAttributes","photoUrl","subject","chatbox","createChatbox","mount","current","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Talk from 'talkjs';\nimport { userList, groupList } from '../firebase/firebase.utils';\nimport './chat.css';\nimport Topbar from '../navbar/Topbar'\nimport Progress from '../progress/Progress'\n\n\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n    this.state = {\n      groupUsers: '',\n    };\n  }\n\n  async componentDidMount() {\n    const setParticipants = (users, currentUser) => {\n     \n      let x = [];\n      users.map((el, i) => {\n        if (el.id !== currentUser) {\n          console.log(el)\n          x.push(\n            new Talk.User({\n              id: el.id,\n              name: el.name,\n              email: el.email,\n            })\n          );\n        }\n      });\n      console.log(x)\n      return x;\n    };\n    const currentUser = this.props.currentUser;\n    // let groupUsers = await userList();\n    let groupUsers = await groupList(currentUser.currentTrip);\n    \n    this.setState({\n      groupUsers: groupUsers,\n    });\n    \n    Talk.ready.then(() => {\n      console.log('running talk ready')\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email,\n      });\n\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me,\n      });\n      console.log('before')\n      let participants = setParticipants(this.state.groupUsers, currentUser.id);\n      console.log(participants)\n\n      var conversation = window.talkSession.getOrCreateConversation(\n        this.props.chatID\n      );\n\n      // var conversation = window.talkSession.getOrCreateConversation(\n      //   this.props.match.params.id\n      // );\n\n      conversation.setParticipant(me);\n      console.log('at participants')\n      participants.map((el) => {\n        conversation.setParticipant(el);\n      });\n\n      conversation.setAttributes({\n        photoUrl: 'https://avatars0.githubusercontent.com/u/4854004?s=280&v=4',\n        subject: 'Bahamas',\n      });\n\n      var chatbox = window.talkSession.createChatbox(conversation);\n      chatbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n\n\n  render() {\n    console.log(this.state.groupUsers);\n    return (\n      <div className=\"full-view\">\n      {/* <div className=\"top\">\n\n      </div> */}\n      \n      {this.state.groupUsers ? (<div className=\"chatbox-container\" ref={this.talkjsContainer}/>) : (<Progress/>)}\n    \n    \n    </div>\n    )}\n}\n"]},"metadata":{},"sourceType":"module"}