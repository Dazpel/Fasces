{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/ReceiptView/Receipt.jsx\";\nimport React, { Component } from 'react';\nimport { saveReceipt } from '../firebase/firebase.utils';\nimport axios from 'axios';\nimport ReceiptTable from './ReceiptTable';\nlet MY_URL_KEY = '31bb9650994211eab7efc1191d38e165';\nexport default class Receipt extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getReceiptData = () => {\n      let file = {\n        url: 'https://edge.taggun.io/web/receipt4.png',\n        headers: {\n          'x-custom-key': 'string'\n        }\n      };\n      axios.post('https://api.taggun.io/api/receipt/v1/simple/url', file, {\n        headers: {\n          apikey: MY_URL_KEY\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.uploadToCloud = () => {// const cloudName = 'dsxn0sfql'\n      // const preset = 'w8mpx9l6'\n      // const url = `https://api.cloudinary.com/v1_1/${\n      //     cloudName\n      //     }/upload`;\n    };\n\n    this.handleFileUpload = e => {\n      console.log('The file to be uploaded is: ', e.target.files[0]);\n      const cloudName = 'dsxn0sfql';\n      const preset = 'w8mpx9l6';\n      let imgFile = e.target.files[0];\n      var url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n      var xhr = new XMLHttpRequest();\n      var fd = new FormData();\n      xhr.open('POST', url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n      xhr.onreadystatechange = function (e) {\n        if (xhr.readyState == 4 && xhr.status == 200) {\n          // File uploaded successfully\n          var response = JSON.parse(xhr.responseText); // https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg\n\n          var url = response.secure_url; // Create a thumbnail of the uploaded image, with 150px width\n\n          console.log(response);\n          saveReceipt(response.asset_id, url);\n        }\n      };\n\n      fd.append('upload_preset', preset);\n      fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary\n\n      fd.append('file', imgFile);\n      xhr.send(fd); // axios\n      //   .post(url, {\n      //     'upload_preset': preset,\n      //     'file': imgFile,\n      //   })\n      //   .then(function (response) {\n      //     console.log(response);\n      //   })\n      //   .catch(function (error) {\n      //     console.log(error);\n      //   });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReceiptTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getReceiptData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: e => this.handleFileUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/ReceiptView/Receipt.jsx"],"names":["React","Component","saveReceipt","axios","ReceiptTable","MY_URL_KEY","Receipt","getReceiptData","file","url","headers","post","apikey","then","response","console","log","catch","error","uploadToCloud","handleFileUpload","e","target","files","cloudName","preset","imgFile","xhr","XMLHttpRequest","fd","FormData","open","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","secure_url","asset_id","append","send","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {saveReceipt} from '../firebase/firebase.utils'\nimport axios from 'axios';\nimport ReceiptTable from './ReceiptTable';\n\nlet MY_URL_KEY = '31bb9650994211eab7efc1191d38e165';\n\nexport default class Receipt extends Component {\n  getReceiptData = () => {\n    let file = {\n      url: 'https://edge.taggun.io/web/receipt4.png',\n      headers: {\n        'x-custom-key': 'string',\n      },\n    };\n\n    axios\n      .post('https://api.taggun.io/api/receipt/v1/simple/url', file, {\n        headers: {\n          apikey: MY_URL_KEY,\n        },\n      })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  uploadToCloud = () => {\n    // const cloudName = 'dsxn0sfql'\n    // const preset = 'w8mpx9l6'\n    // const url = `https://api.cloudinary.com/v1_1/${\n    //     cloudName\n    //     }/upload`;\n  };\n\n  handleFileUpload = (e) => {\n    console.log('The file to be uploaded is: ', e.target.files[0]);\n    const cloudName = 'dsxn0sfql';\n    const preset = 'w8mpx9l6';\n    let imgFile = e.target.files[0];\n\n    var url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n    var xhr = new XMLHttpRequest();\n    var fd = new FormData();\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        // File uploaded successfully\n        var response = JSON.parse(xhr.responseText);\n        // https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg\n        var url = response.secure_url;\n        // Create a thumbnail of the uploaded image, with 150px width\n        console.log(response);\n        saveReceipt(response.asset_id, url)\n      }\n    };\n\n    fd.append('upload_preset', preset);\n    fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary\n    fd.append('file', imgFile);\n    xhr.send(fd);\n\n    // axios\n    //   .post(url, {\n    //     'upload_preset': preset,\n    //     'file': imgFile,\n    //   })\n    //   .then(function (response) {\n    //     console.log(response);\n    //   })\n    //   .catch(function (error) {\n    //     console.log(error);\n    //   });\n  };\n\n  render() {\n    return (\n      <div>\n          <ReceiptTable  />\n        <button onClick={this.getReceiptData}>Upload</button>\n        <input type=\"file\" onChange={(e) => this.handleFileUpload(e)} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}