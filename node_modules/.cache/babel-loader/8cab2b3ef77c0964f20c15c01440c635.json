{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Chat/Chat.jsx\";\nimport React, { Component } from 'react';\nimport Talk from 'talkjs';\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const currentUser = this.props.currentUser;\n    console.log(typeof currentUser.id);\n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email,\n        photoUrl: currentUser.photoURL,\n        welcomeMessage: 'Hey there! How are you? :-)'\n      });\n      var other = new Talk.User({\n        id: '654321',\n        name: 'Sebastian',\n        email: 'Sebastian@example.com',\n        photoUrl: 'https://demo.talkjs.com/img/sebastian.jpg',\n        welcomeMessage: 'Hey, how can I help?'\n      });\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me\n      });\n      var conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, other));\n      conversation.setParticipant(me);\n      conversation.setParticipant(other);\n      var inbox = window.talkSession.createInbox({\n        selected: conversation\n      });\n      inbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.talkjsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Chat/Chat.jsx"],"names":["React","Component","Talk","Chat","constructor","props","talkjsContainer","createRef","componentDidMount","currentUser","console","log","id","ready","then","me","User","name","displayName","email","photoUrl","photoURL","welcomeMessage","other","window","talkSession","Session","appId","conversation","getOrCreateConversation","oneOnOneId","setParticipant","inbox","createInbox","selected","mount","current","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,eAAL,GAAuBN,KAAK,CAACO,SAAN,EAAvB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWI,WAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,WAAW,CAACG,EAA/B;AACAV,IAAAA,IAAI,CAACW,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,UAAIC,EAAE,GAAG,IAAIb,IAAI,CAACc,IAAT,CAAc;AACrBJ,QAAAA,EAAE,EAAEH,WAAW,CAACG,EADK;AAErBK,QAAAA,IAAI,EAAER,WAAW,CAACS,WAFG;AAGrBC,QAAAA,KAAK,EAAEV,WAAW,CAACU,KAHE;AAIrBC,QAAAA,QAAQ,EAAEX,WAAW,CAACY,QAJD;AAKrBC,QAAAA,cAAc,EAAE;AALK,OAAd,CAAT;AAOA,UAAIC,KAAK,GAAG,IAAIrB,IAAI,CAACc,IAAT,CAAc;AACxBJ,QAAAA,EAAE,EAAE,QADoB;AAExBK,QAAAA,IAAI,EAAE,WAFkB;AAGxBE,QAAAA,KAAK,EAAE,uBAHiB;AAIxBC,QAAAA,QAAQ,EAAE,2CAJc;AAKxBE,QAAAA,cAAc,EAAE;AALQ,OAAd,CAAZ;AAOAE,MAAAA,MAAM,CAACC,WAAP,GAAqB,IAAIvB,IAAI,CAACwB,OAAT,CAAiB;AACpCC,QAAAA,KAAK,EAAE,UAD6B;AAEpCZ,QAAAA,EAAE,EAAEA;AAFgC,OAAjB,CAArB;AAIA,UAAIa,YAAY,GAAGJ,MAAM,CAACC,WAAP,CAAmBI,uBAAnB,CACjB3B,IAAI,CAAC4B,UAAL,CAAgBf,EAAhB,EAAoBQ,KAApB,CADiB,CAAnB;AAGAK,MAAAA,YAAY,CAACG,cAAb,CAA4BhB,EAA5B;AACAa,MAAAA,YAAY,CAACG,cAAb,CAA4BR,KAA5B;AACA,UAAIS,KAAK,GAAGR,MAAM,CAACC,WAAP,CAAmBQ,WAAnB,CAA+B;AAAEC,QAAAA,QAAQ,EAAEN;AAAZ,OAA/B,CAAZ;AACAI,MAAAA,KAAK,CAACG,KAAN,CAAY,KAAK7B,eAAL,CAAqB8B,OAAjC;AACD,KA1BD;AA2BD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,GAAG,EAAE,KAAK/B,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAxCyC","sourcesContent":["import React, { Component } from 'react';\nimport Talk from 'talkjs';\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const currentUser = this.props.currentUser;\n    console.log(typeof currentUser.id);\n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email,\n        photoUrl: currentUser.photoURL,\n        welcomeMessage: 'Hey there! How are you? :-)',\n      });\n      var other = new Talk.User({\n        id: '654321',\n        name: 'Sebastian',\n        email: 'Sebastian@example.com',\n        photoUrl: 'https://demo.talkjs.com/img/sebastian.jpg',\n        welcomeMessage: 'Hey, how can I help?',\n      });\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me,\n      });\n      var conversation = window.talkSession.getOrCreateConversation(\n        Talk.oneOnOneId(me, other)\n      );\n      conversation.setParticipant(me);\n      conversation.setParticipant(other);\n      var inbox = window.talkSession.createInbox({ selected: conversation });\n      inbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    return <div ref={this.talkjsContainer}></div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}