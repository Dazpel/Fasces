{"ast":null,"code":"var _jsxFileName = \"/Users/hugoii/Desktop/ironhack/projects/Fasces/src/Components/groupImage/GroupImage.jsx\";\nimport React, { Component } from 'react';\nimport GroupImageFolder from './GroupImageFolder';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Grid from '@material-ui/core/Grid';\nimport ToastMessage from '../Toast/toastMessage';\nimport actions from '../../RouteContainer/axiosCalls';\nimport { retrieveImages, updateImageArr } from '../firebase/firebase.utils';\nimport Progress from '../progress/Progress';\nimport './groupImage.css';\nexport default class GroupImage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: undefined,\n      imageArr: '',\n      saved: false\n    };\n\n    this.updateArr = async user => {\n      let arr = await retrieveImages(user);\n      this.setState({\n        imageArr: arr\n      });\n    };\n\n    this.handleFileUpload = async e => {\n      console.log('The file to be uploaded is: ', e.target.files[0]);\n      const uploadData = new FormData(); // imageUrl => this name has to be the same as in the model since we pass\n      // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n      uploadData.append('imageUrl', e.target.files[0]);\n      await actions.uploadToCD(uploadData).then(response => {\n        // console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        console.log(response);\n        this.setState({\n          imageUrl: response.data.secure_url,\n          saved: false\n        });\n      }).catch(err => {\n        console.log('Error while uploading the file: ', err);\n      });\n    };\n\n    this.handleSubmit = async (url, currentTrip) => {\n      // await actions.uploadToDB(this.state);\n      await updateImageArr(url, currentTrip);\n      this.setState({\n        imageUrl: undefined,\n        saved: true\n      });\n      this.updateArr(this.props.currentUser);\n    };\n  }\n\n  componentDidMount() {\n    this.updateArr(this.props.currentUser, this.state.imageArr);\n  } // this method handles just the file upload\n\n\n  render() {\n    let onUp = false;\n    let onSaved = this.state.saved;\n    this.state.imageUrl === undefined ? onUp = false : onUp = true;\n    onSaved ? onSaved = true : onSaved = false;\n    const {\n      imageArr\n    } = this.state;\n    const {\n      currentTrip\n    } = this.props.currentUser;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"folderContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GroupImageFolder, {\n      imageArr: imageArr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      className: \"folderBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\" // className={classes.button}\n      ,\n      startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 24\n        }\n      }),\n      onClick: () => this.handleSubmit(this.state.imageUrl, currentTrip),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: \"uploadFile groupBtn\",\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: e => this.handleFileUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      size: \"small\",\n      component: \"span\",\n      className: \"groupBtn\",\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 26\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Upload\"))), onUp ? /*#__PURE__*/React.createElement(ToastMessage, {\n      message: 'Success, ready to save!',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }) : '', onSaved ? /*#__PURE__*/React.createElement(ToastMessage, {\n      message: 'Image saved!',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 20\n      }\n    }) : '');\n  }\n\n}","map":{"version":3,"sources":["/Users/hugoii/Desktop/ironhack/projects/Fasces/src/Components/groupImage/GroupImage.jsx"],"names":["React","Component","GroupImageFolder","Button","CloudUploadIcon","SaveIcon","Grid","ToastMessage","actions","retrieveImages","updateImageArr","Progress","GroupImage","state","imageUrl","undefined","imageArr","saved","updateArr","user","arr","setState","handleFileUpload","e","console","log","target","files","uploadData","FormData","append","uploadToCD","then","response","data","secure_url","catch","err","handleSubmit","url","currentTrip","props","currentUser","componentDidMount","render","onUp","onSaved"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GroupImageFolder from './GroupImageFolder';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Grid from '@material-ui/core/Grid';\nimport ToastMessage from '../Toast/toastMessage';\nimport actions from '../../RouteContainer/axiosCalls';\nimport { retrieveImages, updateImageArr } from '../firebase/firebase.utils';\nimport Progress from '../progress/Progress';\nimport './groupImage.css';\n\nexport default class GroupImage extends Component {\n  state = {\n    imageUrl: undefined,\n    imageArr: '',\n    saved: false,\n  };\n\n  updateArr = async (user) => {\n    let arr = await retrieveImages(user);\n    \n\n    this.setState({\n      imageArr: arr,\n    });\n  };\n\n  componentDidMount() {\n  this.updateArr(this.props.currentUser, this.state.imageArr)\n\n  }\n\n  // this method handles just the file upload\n  handleFileUpload = async (e) => {\n    console.log('The file to be uploaded is: ', e.target.files[0]);\n\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append('imageUrl', e.target.files[0]);\n\n    await actions\n      .uploadToCD(uploadData)\n      .then((response) => {\n        // console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        console.log(response)\n        this.setState({ imageUrl: response.data.secure_url, saved: false });\n      })\n      .catch((err) => {\n        console.log('Error while uploading the file: ', err);\n      });\n  };\n\n  // THIS METHOD ADDS THE IMAGE TO THE LIST\n  handleSubmit = async (url, currentTrip) => {\n    // await actions.uploadToDB(this.state);\nawait updateImageArr(url, currentTrip)\n\n\n    this.setState({\n      imageUrl: undefined,\n      saved: true,\n    });\n\n    this.updateArr(this.props.currentUser);\n  };\n\n  render() {\n    let onUp = false;\n    let onSaved = this.state.saved;\n    this.state.imageUrl === undefined ? (onUp = false) : (onUp = true);\n    onSaved ? (onSaved = true) : (onSaved = false);\n\n    const { imageArr } = this.state;\n    const {currentTrip} = this.props.currentUser\n    \n    return (\n      <div>\n        <div className=\"folderContainer\">\n          <GroupImageFolder imageArr={imageArr} />\n        </div>\n\n        <Grid\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          className=\"folderBtn\"\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            // className={classes.button}\n            startIcon={<SaveIcon />}\n            onClick={() => this.handleSubmit(this.state.imageUrl, currentTrip)}\n          >\n            Save\n          </Button>\n          <input\n            accept=\"image/*\"\n            className=\"uploadFile groupBtn\"\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={(e) => this.handleFileUpload(e)}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              size=\"small\"\n              component=\"span\"\n              className=\"groupBtn\"\n              startIcon={<CloudUploadIcon />}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n        {onUp ? <ToastMessage message={'Success, ready to save!'} /> : ''}\n        {onSaved ? <ToastMessage message={'Image saved!'} /> : ''}\n      </div>\n     \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}