{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Chat/Chat.jsx\";\nimport React, { Component } from 'react';\nimport Talk from 'talkjs';\nimport { userList } from '../firebase/firebase.utils';\nimport './chat.css';\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n    this.state = {\n      groupUsers: ''\n    };\n  }\n\n  async componentDidMount() {\n    let group = [];\n\n    const setParticipants = users => {\n      console.log(users);\n    };\n\n    const currentUser = this.props.currentUser;\n    let groupUsers = await userList();\n    this.setState({\n      groupUsers: groupUsers\n    });\n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email,\n        photoUrl: currentUser.photoURL,\n        welcomeMessage: 'Hey there! How are you? :-)'\n      });\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me\n      });\n      var other = new Talk.User({\n        id: '654321',\n        name: 'Sebastian',\n        email: 'Sebastian@example.com',\n        photoUrl: 'https://demo.talkjs.com/img/sebastian.jpg',\n        welcomeMessage: 'Hey, how can I help?'\n      });\n      setParticipants(this.state.groupUsers);\n      var conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, other));\n      conversation.setParticipant(me);\n      conversation.setParticipant(other);\n      var inbox = window.talkSession.createInbox({\n        selected: conversation\n      });\n      inbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    console.log(this.state.groupUsers);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox-container\",\n      ref: this.talkjsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Chat/Chat.jsx"],"names":["React","Component","Talk","userList","Chat","constructor","props","talkjsContainer","createRef","state","groupUsers","componentDidMount","group","setParticipants","users","console","log","currentUser","setState","ready","then","me","User","id","name","displayName","email","photoUrl","photoURL","welcomeMessage","window","talkSession","Session","appId","other","conversation","getOrCreateConversation","oneOnOneId","setParticipant","inbox","createInbox","selected","mount","current","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,OAAO,YAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,eAAL,GAAuBP,KAAK,CAACQ,SAAN,EAAvB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAIC,KAAK,GAAG,EAAZ;;AACA,UAAMC,eAAe,GAAIC,KAAD,IAAW;AAE/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEH,KAJD;;AAKA,UAAMG,WAAW,GAAG,KAAKX,KAAL,CAAWW,WAA/B;AACA,QAAIP,UAAU,GAAG,MAAMP,QAAQ,EAA/B;AAEA,SAAKe,QAAL,CAAc;AACZR,MAAAA,UAAU,EAAEA;AADA,KAAd;AAIAR,IAAAA,IAAI,CAACiB,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,UAAIC,EAAE,GAAG,IAAInB,IAAI,CAACoB,IAAT,CAAc;AACrBC,QAAAA,EAAE,EAAEN,WAAW,CAACM,EADK;AAErBC,QAAAA,IAAI,EAAEP,WAAW,CAACQ,WAFG;AAGrBC,QAAAA,KAAK,EAAET,WAAW,CAACS,KAHE;AAIrBC,QAAAA,QAAQ,EAAEV,WAAW,CAACW,QAJD;AAKrBC,QAAAA,cAAc,EAAE;AALK,OAAd,CAAT;AAQAC,MAAAA,MAAM,CAACC,WAAP,GAAqB,IAAI7B,IAAI,CAAC8B,OAAT,CAAiB;AACpCC,QAAAA,KAAK,EAAE,UAD6B;AAEpCZ,QAAAA,EAAE,EAAEA;AAFgC,OAAjB,CAArB;AAIA,UAAIa,KAAK,GAAG,IAAIhC,IAAI,CAACoB,IAAT,CAAc;AACxBC,QAAAA,EAAE,EAAE,QADoB;AAExBC,QAAAA,IAAI,EAAE,WAFkB;AAGxBE,QAAAA,KAAK,EAAE,uBAHiB;AAIxBC,QAAAA,QAAQ,EAAE,2CAJc;AAKxBE,QAAAA,cAAc,EAAE;AALQ,OAAd,CAAZ;AAQAhB,MAAAA,eAAe,CAAC,KAAKJ,KAAL,CAAWC,UAAZ,CAAf;AAEA,UAAIyB,YAAY,GAAGL,MAAM,CAACC,WAAP,CAAmBK,uBAAnB,CACjBlC,IAAI,CAACmC,UAAL,CAAgBhB,EAAhB,EAAoBa,KAApB,CADiB,CAAnB;AAGAC,MAAAA,YAAY,CAACG,cAAb,CAA4BjB,EAA5B;AACAc,MAAAA,YAAY,CAACG,cAAb,CAA4BJ,KAA5B;AAEA,UAAIK,KAAK,GAAGT,MAAM,CAACC,WAAP,CAAmBS,WAAnB,CAA+B;AAAEC,QAAAA,QAAQ,EAAEN;AAAZ,OAA/B,CAAZ;AACAI,MAAAA,KAAK,CAACG,KAAN,CAAY,KAAKnC,eAAL,CAAqBoC,OAAjC;AACD,KA/BD;AAgCD;;AAEDC,EAAAA,MAAM,GAAG;AACP7B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,UAAvB;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,GAAG,EAAE,KAAKH,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AA5DyC","sourcesContent":["import React, { Component } from 'react';\nimport Talk from 'talkjs';\nimport { userList } from '../firebase/firebase.utils';\n\nimport './chat.css';\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n    this.state = {\n      groupUsers: '',\n    };\n  }\n\n  async componentDidMount() {\n    let group = [] \n    const setParticipants = (users) => {\n\n        console.log(users)\n\n    }\n    const currentUser = this.props.currentUser;\n    let groupUsers = await userList();\n\n    this.setState({\n      groupUsers: groupUsers,\n    });\n\n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email,\n        photoUrl: currentUser.photoURL,\n        welcomeMessage: 'Hey there! How are you? :-)',\n      });\n\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me,\n      });\n      var other = new Talk.User({\n        id: '654321',\n        name: 'Sebastian',\n        email: 'Sebastian@example.com',\n        photoUrl: 'https://demo.talkjs.com/img/sebastian.jpg',\n        welcomeMessage: 'Hey, how can I help?',\n      });\n\n      setParticipants(this.state.groupUsers)\n\n      var conversation = window.talkSession.getOrCreateConversation(\n        Talk.oneOnOneId(me, other)\n      );\n      conversation.setParticipant(me);\n      conversation.setParticipant(other);\n\n      var inbox = window.talkSession.createInbox({ selected: conversation });\n      inbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    console.log(this.state.groupUsers);\n    return <div className=\"chatbox-container\" ref={this.talkjsContainer}></div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}