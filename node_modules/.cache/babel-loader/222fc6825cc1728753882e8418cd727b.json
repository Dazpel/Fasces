{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\n  projectId: 'paxanimi-73b93',\n  storageBucket: 'paxanimi-73b93.appspot.com',\n  messagingSenderId: '852882682760',\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\n  measurementId: 'G-NB8J25CEJN'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n    const createdAt = new Date();\n    const trackStock = [];\n    const activeTrip = false;\n\n    try {\n      await userRef.set({\n        activeTrip,\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; //CREATE A NEW TRIP INSTANCE WITH ALL COMPOENTS EMPY\n\nexport const createNewTrip = async (user, tripName, id) => {\n  const tripRef = firestore.doc(`trips/${id}`);\n  const snapShot = await tripRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      email\n    } = user;\n    const date = new Date();\n    const createdAt = date.toDateString();\n    const tripImages = [];\n    const tripReceipts = [];\n    const isActive = true;\n    const users = [{\n      id: user.id,\n      email: email\n    }];\n\n    try {\n      await tripRef.set({\n        isActive,\n        createdAt,\n        tripName,\n        tripImages,\n        tripReceipts,\n        users\n      }); //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n\n      await updateTripStatus(user.id, id, tripName, createdAt);\n    } catch (error) {\n      console.log('error creating trip', error.message);\n    }\n  }\n}; //FIND FRIENDS EMAIL TO JOIN THE GROUP\n\nexport const findMyFriend = async email => {\n  let users = await userList();\n  let tripExist = false;\n  users.map(el => {\n    if (el.email === email && el.activeTrip === true) {\n      return tripExist = el.currentTrip;\n    }\n  });\n  return tripExist;\n};\nexport const updateExpenses = async (userID, x) => {\n  let user = await firestore.collection('users').doc(userID);\n  let userData = await firestore.collection('users').doc(userID).get();\n  let expense = userData.data().expenses;\n  let total = expense + x;\n\n  try {\n    user.update({\n      expenses: total\n    });\n  } catch (error) {\n    console.log('Error ending trip', error);\n  }\n}; //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n\nexport const updateTripStatus = async (userID, tripID, tripName, createdAt) => {\n  let user = await firestore.collection('users').doc(userID);\n  let userRef = await user.get();\n  let tripRef = await firestore.collection('trips').doc(tripID);\n  let tripInfo = {\n    id: tripID,\n    name: tripName,\n    date: createdAt\n  };\n  let newUser = {\n    id: userID,\n    email: userRef.data().email\n  };\n\n  try {\n    user.update({\n      activeTrip: true,\n      trips: firebase.firestore.FieldValue.arrayUnion(tripInfo),\n      currentTrip: tripID\n    });\n    console.log(newUser);\n    tripRef.update({\n      users: firebase.firestore.FieldValue.arrayUnion(newUser)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const tripBalance = async tripId => {\n  let x = [];\n  let trips = await tripList();\n  let tripIndex = 0;\n  trips.map((ele, i) => {\n    if (ele.id === tripId) {\n      tripIndex = i;\n    }\n  });\n  let users = trips[tripIndex].data().users;\n  let trip = await firestore.collection('trips').doc(tripId); //let numOfUsers = users.length\n\n  users.map(async userId => {\n    let user = await firestore.collection('users').doc(userId.id);\n    let userData = await firestore.collection('users').doc(userId.id).get();\n    let expense = userData.data().expenses;\n    x = {\n      name: userData.data().displayName,\n      balance: expense\n    };\n    console.log(x);\n\n    try {\n      user.update({\n        expenses: 0\n      });\n      trip.update({\n        balance: firebase.firestore.FieldValue.arrayUnion(x)\n      });\n    } catch (error) {\n      console.log('Error adding stock', error);\n    }\n\n    return 0;\n  });\n  console.log(x);\n\n  try {} catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const getTripData = async tripID => {\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n  let obj = {\n    name: tripData.tripName,\n    date: tripData.createdAt\n  };\n  return obj;\n};\nexport const getTripBalance = async tripID => {\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n  return tripData.balance;\n}; // export const endTripStatus = async (userID) => {\n//   let user = await firestore.collection('users').doc(userID);\n//   console.log(user);\n//   try {\n//     user.update({\n//       activeTrip: false,\n//       currentTrip: '',\n//     });\n//   } catch (error) {\n//     console.log('Error adding stock', error);\n//   }\n// };\n\nexport const endTripStatus = async tripID => {\n  let tripData = await firestore.collection('trips').doc(tripID).get();\n  let users = tripData.data().users;\n  users.map(async ele => {\n    let user = await firestore.collection('users').doc(ele.id);\n\n    try {\n      user.update({\n        activeTrip: false,\n        currentTrip: ''\n      });\n    } catch (error) {\n      console.log('Error adding stock', error);\n    }\n  });\n};\nexport const cosimo = async (userName, tripId) => {\n  let x = await balance(tripId);\n  let output = '';\n\n  for (let i = 0; i < x.length; i++) {\n    if (x[i].balance < 0) {\n      for (let j = 0; j < x.length; j++) {\n        if (x[j].balance > 0) {\n          if (x[j].balance >= x[i].balance * -1) {\n            if (x[i].name === userName) {\n              output += \"You should pay \" + x[j].name + \" $\" + x[i].balance * -1 + '\\n';\n            }\n\n            x[j].balance += x[i].balance;\n            x[i].balance = 0;\n            break;\n          } else {\n            if (x[i].name === userName) {\n              output += \"You should pay \" + x[j].name + \" $\" + x[j].balance + '\\n';\n            }\n\n            x[i].balance += x[j].balance;\n            x[j].balance = 0;\n          }\n        }\n      }\n    } else {\n      if (x[i].name === userName) output += 'You have paid!';\n    }\n  }\n\n  return output;\n};\nexport const retrieveImages = async (user, query) => {\n  let currentTrip = '';\n\n  if (query) {\n    currentTrip = user.queryID;\n  } else {\n    currentTrip = user.currentTrip;\n  }\n\n  let tripImages = [];\n\n  try {\n    let ref = await firestore.collection('trips').doc(currentTrip).get();\n    let data = await ref.data();\n    tripImages = data.tripImages;\n  } catch (err) {\n    console.log(err);\n  }\n\n  return tripImages.reverse();\n}; // UPDATE QUOTE FOR PROFILE\n\nexport const updateQuote = async (userID, quote) => {\n  console.log('running');\n  let user = await firestore.collection('users').doc(userID);\n\n  try {\n    user.update({\n      quote: quote\n    });\n  } catch (error) {\n    console.log('Error adding quote', error);\n  }\n};\nexport const singleQuery = async (id, tripID) => {\n  let userRef = await firestore.collection('users').doc(id);\n\n  try {\n    userRef.update({\n      queryID: tripID\n    });\n  } catch (error) {\n    console.log('Error adding image', error);\n  }\n};\nexport const fetchTripData = async tripID => {\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  return tripRef.data();\n};\nexport const userList = async () => {\n  let userArr = [];\n  let users = await firestore.collection('users').get();\n  users.docs.map((doc, i) => userArr[i] = {\n    id: doc.id,\n    ...doc.data()\n  });\n\n  if (userArr.length > 0) {\n    console.log(userArr);\n    return userArr;\n  }\n};\nexport const groupList = async currentTrip => {\n  let userArr = [];\n  let users = await firestore.collection('trips').doc(currentTrip).get();\n  let userRef = users.data();\n  userRef.users.map((doc, i) => console.log(doc)); // if (userArr.length > 0) {\n  //   console.log(userArr);\n  //   return userArr;\n  // }\n  // (userArr[i] = { id: doc.id, ...doc.data() })\n};\nexport const balance = async tripId => {\n  let trip = await firestore.collection('trips').doc(tripId).get();\n  return trip.data().balance;\n};\nexport const tripList = async () => {\n  let users = await firestore.collection('trips').get();\n  return users.docs;\n};\nexport const endTrip = async (userID, tripID) => {\n  let user = await firestore.collection('users').doc(userID);\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n  let users = tripData.users;\n\n  try {\n    user.update({\n      activeTrip: false,\n      currentTrip: ''\n    });\n  } catch (error) {\n    console.log('Error ending trip', error);\n  }\n\n  try {\n    let emails = [];\n    users.map(async user => {\n      emails.push(user.email);\n    });\n    return emails;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateImageArr = async (url, tripID) => {\n  const docID = tripID;\n  let imageArr = await firestore.collection('trips').doc(docID);\n  const date = new Date();\n  const createdAt = date.toDateString(); // let item = {\n  //   url: url,\n  //   id: id,\n  //   createdAt: createdAt,\n  //   amount: imgAmount,\n  // };\n\n  try {\n    console.log('running update');\n    imageArr.update({\n      tripImages: firebase.firestore.FieldValue.arrayUnion(url)\n    });\n  } catch (error) {\n    console.log('Error adding image', error);\n  }\n};\n\nconst sentinel = async (data, upF, currentTrip) => {\n  let tripID = currentTrip;\n  let doc = await firestore.collection('trips').doc(tripID);\n  let observer = await doc.onSnapshot(async docSnapshot => {\n    let getDoc = await doc.get().then(async doc => {\n      if (!doc.exists) {\n        console.log('No such document!');\n      } else if (data.length !== doc.data().tripReceipts.length) {\n        upF();\n      }\n    });\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n};\n\nexport const receiptListArr = async (query, user, updateFunc) => {\n  console.log(query, user, updateFunc);\n  let currentTrip = '';\n\n  if (query) {\n    currentTrip = user.queryID;\n  } else {\n    currentTrip = user.currentTrip;\n  }\n\n  var receiptArr = [];\n  let arrRef = await firestore.collection('trips').doc(currentTrip);\n  let getDoc = await arrRef.get().then(doc => {\n    if (!doc.exists) {\n      console.log('No such document!');\n    } else {\n      receiptArr = doc.data().tripReceipts;\n      sentinel(receiptArr, updateFunc, currentTrip);\n    }\n  }).catch(err => {\n    console.log('Error getting document', err);\n  });\n  return receiptArr;\n};\nexport const updateReceiptArr = async (id, imgURL, imgAmount, currentTrip) => {\n  let tripID = currentTrip;\n  let receiptArr = await firestore.collection('trips').doc(tripID);\n  const date = new Date();\n  const createdAt = date.toDateString();\n  let item = {\n    url: imgURL,\n    id: id,\n    createdAt: createdAt,\n    amount: imgAmount\n  };\n\n  try {\n    receiptArr.update({\n      tripReceipts: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\n  const userRef = firestore.doc(`images/${id}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const imgUrl = imgURL;\n    const amount = imgAmount;\n    const date = new Date();\n    const createdAt = date.toDateString();\n\n    try {\n      await userRef.set({\n        imgUrl,\n        createdAt,\n        amount\n      });\n    } catch (error) {\n      console.log('error saving receipt', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const updateTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const deleteTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n    });\n  } catch (error) {\n    console.log('Error deleting stock', error);\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider); // console.log(auth.signInWithPopup(provider))\n};\nexport default firebase;","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","photoURL","createdAt","Date","trackStock","activeTrip","set","error","console","log","message","createNewTrip","user","tripName","id","tripRef","date","toDateString","tripImages","tripReceipts","isActive","users","updateTripStatus","findMyFriend","userList","tripExist","map","el","currentTrip","updateExpenses","userID","x","collection","userData","expense","data","expenses","total","update","tripID","tripInfo","name","newUser","trips","FieldValue","arrayUnion","tripBalance","tripId","tripList","tripIndex","ele","i","trip","userId","balance","getTripData","tripData","obj","getTripBalance","endTripStatus","cosimo","userName","output","length","j","retrieveImages","query","queryID","ref","err","reverse","updateQuote","quote","singleQuery","fetchTripData","userArr","docs","groupList","endTrip","emails","push","updateImageArr","url","docID","imageArr","sentinel","upF","observer","onSnapshot","docSnapshot","getDoc","then","receiptListArr","updateFunc","receiptArr","arrRef","catch","updateReceiptArr","imgURL","imgAmount","item","amount","saveReceipt","imgUrl","updateTracking","stockArr","deleteTracking","arrayRemove","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\n  projectId: 'paxanimi-73b93',\n  storageBucket: 'paxanimi-73b93.appspot.com',\n  messagingSenderId: '852882682760',\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\n  measurementId: 'G-NB8J25CEJN',\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email, photoURL } = userAuth;\n    const createdAt = new Date();\n    const trackStock = [];\n    const activeTrip = false;\n\n    try {\n      await userRef.set({\n        activeTrip,\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n  return userRef;\n};\n\n//CREATE A NEW TRIP INSTANCE WITH ALL COMPOENTS EMPY\nexport const createNewTrip = async (user, tripName, id) => {\n  const tripRef = firestore.doc(`trips/${id}`);\n\n  const snapShot = await tripRef.get();\n\n  if (!snapShot.exists) {\n    const { email } = user;\n    const date = new Date();\n    const createdAt = date.toDateString();\n    const tripImages = [];\n    const tripReceipts = [];\n    const isActive = true;\n    const users = [\n      {\n        id: user.id,\n        email: email,\n      },\n    ];\n\n    try {\n      await tripRef.set({\n        isActive,\n        createdAt,\n        tripName,\n        tripImages,\n        tripReceipts,\n        users,\n      });\n      //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n      await updateTripStatus(user.id, id, tripName, createdAt);\n    } catch (error) {\n      console.log('error creating trip', error.message);\n    }\n  }\n};\n\n//FIND FRIENDS EMAIL TO JOIN THE GROUP\nexport const findMyFriend = async (email) => {\n  let users = await userList();\n  let tripExist = false;\n\n  users.map((el) => {\n    if (el.email === email && el.activeTrip === true) {\n      return (tripExist = el.currentTrip);\n    }\n  });\n\n  return tripExist;\n};\n\nexport const updateExpenses = async (userID, x) => {\n  let user = await firestore.collection('users').doc(userID);\n  let userData = await firestore.collection('users').doc(userID).get();\n  let expense = userData.data().expenses;\n  let total = expense + x;\n  try {\n    user.update({\n      expenses: total,\n    });\n  } catch (error) {\n    console.log('Error ending trip', error);\n  }\n};\n\n//SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\nexport const updateTripStatus = async (userID, tripID, tripName, createdAt) => {\n  let user = await firestore.collection('users').doc(userID);\n  let userRef = await user.get();\n  let tripRef = await firestore.collection('trips').doc(tripID);\n\n  let tripInfo = {\n    id: tripID,\n    name: tripName,\n    date: createdAt,\n  };\n\n  let newUser = {\n    id: userID,\n    email: userRef.data().email,\n  };\n  try {\n    user.update({\n      activeTrip: true,\n      trips: firebase.firestore.FieldValue.arrayUnion(tripInfo),\n      currentTrip: tripID,\n    });\n\n    console.log(newUser);\n    tripRef.update({\n      users: firebase.firestore.FieldValue.arrayUnion(newUser),\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\n\nexport const tripBalance = async (tripId) => {\n  let x = []\n  let trips = await tripList()\n  let tripIndex = 0\n  trips.map((ele, i) => {\n      if (ele.id === tripId){tripIndex =  i}\n  })\n  let users = trips[tripIndex].data().users\n  let trip = await firestore.collection('trips').doc(tripId);\n  //let numOfUsers = users.length\n  users.map(async (userId) => {\n    \n      let user = await firestore.collection('users').doc(userId.id);\n      let userData = await firestore.collection('users').doc(userId.id).get()\n      let expense = userData.data().expenses\n      x = { name:userData.data().displayName, balance:expense}\n      console.log(x)\n      try {\n          user.update({\n            expenses: 0,\n          });\n          trip.update({\n            balance: firebase.firestore.FieldValue.arrayUnion(x)\n          });\n        } catch (error) {\n          console.log('Error adding stock', error);\n        }\n      return 0\n  })\n  \n  console.log(x)\n  try {\n      \n  } catch (error) {\n      console.log('Error adding stock', error);\n  }\n}\n\nexport const getTripData = async (tripID) => {\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n  let obj = {\n    name: tripData.tripName,\n    date: tripData.createdAt,\n  };\n\n  return obj;\n};\n\nexport const getTripBalance = async (tripID) => {\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n\n  return tripData.balance;\n};\n\n// export const endTripStatus = async (userID) => {\n//   let user = await firestore.collection('users').doc(userID);\n//   console.log(user);\n//   try {\n//     user.update({\n//       activeTrip: false,\n//       currentTrip: '',\n//     });\n//   } catch (error) {\n//     console.log('Error adding stock', error);\n//   }\n// };\n\nexport const endTripStatus = async (tripID) => {\n  let tripData = await firestore.collection('trips').doc(tripID).get();\n  let users = tripData.data().users\n  users.map(async (ele) => {\n    let user = await firestore.collection('users').doc(ele.id)\n    try {\n      user.update({\n        activeTrip: false,\n        currentTrip: ''\n      })\n    }catch (error) {\n      console.log('Error adding stock', error);\n    }\n  })\n};\n\nexport const cosimo = async (userName, tripId) => {\n  let x = await balance(tripId)\n  let output = ''\n  for(let i = 0; i < x.length; i++)\n  {\n      if( x[i].balance < 0 )\n      {\n          for(let j = 0; j < x.length; j++)\n          {\n              if(x[j].balance > 0)\n              {\n                  if(x[j].balance >= (x[i].balance*-1))\n                  {\n                      if(x[i].name === userName)\n                        {output += \"You should pay \" + x[j].name + \" $\" + (x[i].balance*-1)+ '\\n'}\n                      x[j].balance += x[i].balance\n                      x[i].balance = 0;\n                      break;\n                  }\n                  else \n                  {\n                      if(x[i].name === userName)\n                        {output += \"You should pay \" + x[j].name + \" $\" + (x[j].balance)+ '\\n'}\n                      x[i].balance += x[j].balance\n                      x[j].balance = 0\n                  }\n              }\n          }\n      }\n      else\n      {\n          if(x[i].name === userName)\n            output += 'You have paid!'\n      }\n  }\n  return output\n}\n\nexport const retrieveImages = async (user, query) => {\n  let currentTrip = '';\n  if (query) {\n    currentTrip = user.queryID;\n  } else {\n    currentTrip = user.currentTrip;\n  }\n  let tripImages = [];\n  try {\n    let ref = await firestore.collection('trips').doc(currentTrip).get();\n    let data = await ref.data();\n    tripImages = data.tripImages;\n  } catch (err) {\n    console.log(err);\n  }\n  return tripImages.reverse();\n};\n\n// UPDATE QUOTE FOR PROFILE\nexport const updateQuote = async (userID, quote) => {\n  console.log('running');\n  let user = await firestore.collection('users').doc(userID);\n\n  try {\n    user.update({\n      quote: quote,\n    });\n  } catch (error) {\n    console.log('Error adding quote', error);\n  }\n};\n\nexport const singleQuery = async (id, tripID) => {\n  let userRef = await firestore.collection('users').doc(id);\n  try {\n    userRef.update({\n      queryID: tripID,\n    });\n  } catch (error) {\n    console.log('Error adding image', error);\n  }\n};\n\nexport const fetchTripData = async (tripID) => {\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  return tripRef.data();\n};\n\nexport const userList = async () => {\n  let userArr = [];\n\n  let users = await firestore.collection('users').get();\n  users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\n\n  if (userArr.length > 0) {\n    console.log(userArr);\n    return userArr;\n  }\n};\n\nexport const groupList = async (currentTrip) => {\n  let userArr = [];\n  \n  let users = await firestore.collection('trips').doc(currentTrip).get();\n  let userRef = users.data()\n  userRef.users.map((doc, i) => console.log(doc));\n  \n\n  // if (userArr.length > 0) {\n  //   console.log(userArr);\n  //   return userArr;\n  // }\n  // (userArr[i] = { id: doc.id, ...doc.data() })\n};\n\nexport const balance = async (tripId) => {\n  let trip = await firestore.collection('trips').doc(tripId).get();\n  return trip.data().balance;\n};\n\nexport const tripList = async () => {\n\n  let users = await firestore.collection('trips').get();\n  return users.docs;\n\n};\n\nexport const endTrip = async (userID, tripID) => {\n  let user = await firestore.collection('users').doc(userID);\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n  let users = tripData.users;\n  try {\n    user.update({\n      activeTrip: false,\n      currentTrip: '',\n    });\n  } catch (error) {\n    console.log('Error ending trip', error);\n  }\n  try {\n    let emails = [];\n    users.map(async (user) => {\n      emails.push(user.email);\n    });\n    return emails;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const updateImageArr = async (url, tripID) => {\n  const docID = tripID;\n  let imageArr = await firestore.collection('trips').doc(docID);\n  const date = new Date();\n  const createdAt = date.toDateString();\n  // let item = {\n  //   url: url,\n  //   id: id,\n  //   createdAt: createdAt,\n  //   amount: imgAmount,\n  // };\n  try {\n    console.log('running update');\n    imageArr.update({\n      tripImages: firebase.firestore.FieldValue.arrayUnion(url),\n    });\n  } catch (error) {\n    console.log('Error adding image', error);\n  }\n};\nconst sentinel = async (data, upF, currentTrip) => {\n  let tripID = currentTrip;\n  let doc = await firestore.collection('trips').doc(tripID);\n\n  let observer = await doc.onSnapshot(\n    async (docSnapshot) => {\n      let getDoc = await doc.get().then(async (doc) => {\n        if (!doc.exists) {\n          console.log('No such document!');\n        } else if (data.length !== doc.data().tripReceipts.length) {\n          upF();\n        }\n      });\n    },\n    (err) => {\n      console.log(`Encountered error: ${err}`);\n    }\n  );\n};\n\nexport const receiptListArr = async (query, user, updateFunc) => {\n  console.log(query, user, updateFunc)\n  let currentTrip = '';\n  if (query) {\n    currentTrip = user.queryID;\n  } else {\n    currentTrip = user.currentTrip;\n  }\n  var receiptArr = [];\n  let arrRef = await firestore.collection('trips').doc(currentTrip);\n  let getDoc = await arrRef\n    .get()\n    .then((doc) => {\n      if (!doc.exists) {\n        console.log('No such document!');\n      } else {\n        receiptArr = doc.data().tripReceipts;\n        sentinel(receiptArr, updateFunc, currentTrip);\n      }\n    })\n    .catch((err) => {\n      console.log('Error getting document', err);\n    });\n\n  return receiptArr;\n};\n\nexport const updateReceiptArr = async (id, imgURL, imgAmount, currentTrip) => {\n  let tripID = currentTrip;\n  let receiptArr = await firestore.collection('trips').doc(tripID);\n  const date = new Date();\n  const createdAt = date.toDateString();\n  let item = {\n    url: imgURL,\n    id: id,\n    createdAt: createdAt,\n    amount: imgAmount,\n  };\n\n  try {\n    receiptArr.update({\n      tripReceipts: firebase.firestore.FieldValue.arrayUnion(item),\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\n\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\n  const userRef = firestore.doc(`images/${id}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const imgUrl = imgURL;\n    const amount = imgAmount;\n    const date = new Date();\n    const createdAt = date.toDateString();\n\n    try {\n      await userRef.set({\n        imgUrl,\n        createdAt,\n        amount,\n      });\n    } catch (error) {\n      console.log('error saving receipt', error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const updateTracking = async (user, item) => {\n  const { id } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item),\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\n\nexport const deleteTracking = async (user, item) => {\n  const { id } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item),\n    });\n  } catch (error) {\n    console.log('Error deleting stock', error);\n  }\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n  // console.log(auth.signInWithPopup(provider))\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}