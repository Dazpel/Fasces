{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\n  projectId: 'paxanimi-73b93',\n  storageBucket: 'paxanimi-73b93.appspot.com',\n  messagingSenderId: '852882682760',\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\n  measurementId: 'G-NB8J25CEJN'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n    const createdAt = new Date();\n    const trackStock = [];\n    const activeTrip = false;\n\n    try {\n      await userRef.set({\n        activeTrip,\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; //CREATE A NEW TRIP INSTANCE WITH ALL COMPOENTS EMPY\n\nexport const createNewTrip = async (user, tripName, id) => {\n  const tripRef = firestore.doc(`trips/${id}`);\n  const snapShot = await tripRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      email\n    } = user;\n    const date = new Date();\n    const createdAt = date.toDateString();\n    const tripImages = [];\n    const tripReceipts = [];\n    const isActive = true;\n    const users = [{\n      id: user.id,\n      email: email\n    }];\n\n    try {\n      await tripRef.set({\n        isActive,\n        createdAt,\n        tripName,\n        tripImages,\n        tripReceipts,\n        users\n      }); //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n\n      await updateTripStatus(user.id, id, tripName, createdAt);\n    } catch (error) {\n      console.log('error creating trip', error.message);\n    }\n  }\n}; //FIND FRIENDS EMAIL TO JOIN THE GROUP\n\nexport const findMyFriend = async email => {\n  let users = await userList();\n  let tripExist = false;\n  users.map(el => {\n    if (el.email === email && el.activeTrip === true) {\n      return tripExist = el.currentTrip;\n    }\n  });\n  return tripExist;\n};\nexport const updateExpenses = async (userID, x) => {\n  let user = await firestore.collection('users').doc(userID);\n  let userData = await firestore.collection('users').doc(userID).get();\n  let expense = userData.data().expenses;\n  let total = expense + x;\n\n  try {\n    user.update({\n      expenses: total\n    });\n  } catch (error) {\n    console.log('Error ending trip', error);\n  }\n}; //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n\nexport const updateTripStatus = async (userID, tripID, tripName, createdAt) => {\n  let user = await firestore.collection('users').doc(userID);\n  let userRef = await user.get();\n  let tripRef = await firestore.collection('trips').doc(tripID);\n  let tripInfo = {\n    id: tripID,\n    name: tripName,\n    date: createdAt\n  };\n  let newUser = {\n    id: userID,\n    email: userRef.data().email\n  };\n\n  try {\n    user.update({\n      activeTrip: true,\n      trips: firebase.firestore.FieldValue.arrayUnion(tripInfo),\n      currentTrip: tripID\n    });\n    console.log(newUser);\n    tripRef.update({\n      users: firebase.firestore.FieldValue.arrayUnion(newUser)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const tripBalance = async tripId => {\n  let x = [];\n  let trips = await tripList();\n  let tripIndex = 0;\n  trips.map((ele, i) => {\n    if (ele.id === tripId) {\n      tripIndex = i;\n    }\n  });\n  let users = trips[tripIndex].data().users; //let numOfUsers = users.length\n\n  users.map(async userId => {\n    let user = await firestore.collection('users').doc(userId);\n    let userData = await firestore.collection('users').doc(userId).get();\n    let expense = userData.data().expenses;\n    x.push({\n      name: userData.data().displayName,\n      balance: expense\n    });\n\n    try {\n      user.update({\n        expenses: 0\n      });\n    } catch (error) {\n      console.log('Error adding stock', error);\n    }\n\n    return 0;\n  });\n  let trip = await firestore.collection('trips').doc(tripId);\n\n  try {\n    trip.update({\n      balance: firebase.firestore.FieldValue.arrayUnion(x)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const getTripData = async tripID => {\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n  let obj = {\n    name: tripData.tripName,\n    date: tripData.createdAt\n  };\n  return obj;\n};\nexport const endTripStatus = async userID => {\n  let user = await firestore.collection('users').doc(userID);\n  console.log(user);\n\n  try {\n    user.update({\n      activeTrip: false\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const retrieveImages = async user => {\n  let currentTrip = '';\n\n  if (user.queryID) {\n    currentTrip = user.queryID;\n    console.log(currentTrip);\n  } else {\n    currentTrip = user.currentTrip;\n  }\n\n  let tripImages = [];\n\n  try {\n    let ref = await firestore.collection('trips').doc(currentTrip).get();\n    let data = await ref.data();\n    tripImages = data.tripImages;\n  } catch (err) {\n    console.log(err);\n  }\n\n  return tripImages.reverse();\n}; // UPDATE QUOTE FOR PROFILE\n\nexport const updateQuote = async (userID, quote) => {\n  console.log('running');\n  let user = await firestore.collection('users').doc(userID);\n\n  try {\n    user.update({\n      quote: quote\n    });\n  } catch (error) {\n    console.log('Error adding quote', error);\n  }\n};\nexport const singleQuery = async (id, tripID) => {\n  let userRef = await firestore.collection('users').doc(id);\n\n  try {\n    userRef.update({\n      queryID: tripID\n    });\n  } catch (error) {\n    console.log('Error adding image', error);\n  }\n};\nexport const fetchTripData = async tripID => {\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  return tripRef.data();\n};\nexport const userList = async () => {\n  let userArr = [];\n  let users = await firestore.collection('users').get();\n  users.docs.map((doc, i) => userArr[i] = {\n    id: doc.id,\n    ...doc.data()\n  });\n\n  if (userArr.length > 0) {\n    console.log(userArr);\n    return userArr;\n  }\n};\nexport const balance = async tripId => {\n  let trip = await firestore.collection('trips').doc(tripId).get();\n  return trip.balance;\n};\nexport const tripList = async () => {\n  let userArr = [];\n  let users = await firestore.collection('trips').get(); // users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\n\n  return users.docs; // if (userArr.length > 0) {\n  //   console.log(userArr);\n  //   return userArr;\n  // }\n};\nexport const endTrip = async (userID, tripID) => {\n  let user = await firestore.collection('users').doc(userID);\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n  let users = tripData.users;\n\n  try {\n    user.update({\n      activeTrip: false,\n      currentTrip: ''\n    });\n  } catch (error) {\n    console.log('Error ending trip', error);\n  }\n\n  try {\n    let emails = [];\n    users.map(async user => {\n      emails.push(user.email);\n    });\n    return emails;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateImageArr = async (url, tripID) => {\n  const docID = tripID;\n  let imageArr = await firestore.collection('trips').doc(docID);\n  const date = new Date();\n  const createdAt = date.toDateString(); // let item = {\n  //   url: url,\n  //   id: id,\n  //   createdAt: createdAt,\n  //   amount: imgAmount,\n  // };\n\n  try {\n    console.log('running update');\n    imageArr.update({\n      tripImages: firebase.firestore.FieldValue.arrayUnion(url)\n    });\n  } catch (error) {\n    console.log('Error adding image', error);\n  }\n};\n\nconst sentinel = async (data, upF, currentTrip) => {\n  let tripID = currentTrip;\n  let doc = await firestore.collection('trips').doc(tripID);\n  let observer = await doc.onSnapshot(async docSnapshot => {\n    let getDoc = await doc.get().then(async doc => {\n      if (!doc.exists) {\n        console.log('No such document!');\n      } else if (data.length !== doc.data().tripReceipts.length) {\n        upF();\n      }\n    });\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n};\n\nexport const receiptListArr = async (user, updateFunc) => {\n  let currentTrip = '';\n\n  if (user.queryID) {\n    currentTrip = user.queryID;\n  } else {\n    currentTrip = user.currentTrip;\n  }\n\n  var receiptArr = [];\n  let arrRef = await firestore.collection('trips').doc(currentTrip);\n  let getDoc = await arrRef.get().then(doc => {\n    if (!doc.exists) {\n      console.log('No such document!');\n    } else {\n      receiptArr = doc.data().tripReceipts;\n      sentinel(receiptArr, updateFunc, currentTrip);\n    }\n  }).catch(err => {\n    console.log('Error getting document', err);\n  });\n  return receiptArr;\n};\nexport const updateReceiptArr = async (id, imgURL, imgAmount, currentTrip) => {\n  let tripID = currentTrip;\n  let receiptArr = await firestore.collection('trips').doc(tripID);\n  const date = new Date();\n  const createdAt = date.toDateString();\n  let item = {\n    url: imgURL,\n    id: id,\n    createdAt: createdAt,\n    amount: imgAmount\n  };\n\n  try {\n    receiptArr.update({\n      tripReceipts: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\n  const userRef = firestore.doc(`images/${id}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const imgUrl = imgURL;\n    const amount = imgAmount;\n    const date = new Date();\n    const createdAt = date.toDateString();\n\n    try {\n      await userRef.set({\n        imgUrl,\n        createdAt,\n        amount\n      });\n    } catch (error) {\n      console.log('error saving receipt', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const updateTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const deleteTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n    });\n  } catch (error) {\n    console.log('Error deleting stock', error);\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider); // console.log(auth.signInWithPopup(provider))\n};\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Billy's PC/Desktop/Fasces/src/Components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","photoURL","createdAt","Date","trackStock","activeTrip","set","error","console","log","message","createNewTrip","user","tripName","id","tripRef","date","toDateString","tripImages","tripReceipts","isActive","users","updateTripStatus","findMyFriend","userList","tripExist","map","el","currentTrip","updateExpenses","userID","x","collection","userData","expense","data","expenses","total","update","tripID","tripInfo","name","newUser","trips","FieldValue","arrayUnion","tripBalance","tripId","tripList","tripIndex","ele","i","userId","push","balance","trip","getTripData","tripData","obj","endTripStatus","retrieveImages","queryID","ref","err","reverse","updateQuote","quote","singleQuery","fetchTripData","userArr","docs","length","endTrip","emails","updateImageArr","url","docID","imageArr","sentinel","upF","observer","onSnapshot","docSnapshot","getDoc","then","receiptListArr","updateFunc","receiptArr","arrRef","catch","updateReceiptArr","imgURL","imgAmount","item","amount","saveReceipt","imgUrl","updateTracking","stockArr","deleteTracking","arrayRemove","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\r\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\r\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\r\n  projectId: 'paxanimi-73b93',\r\n  storageBucket: 'paxanimi-73b93.appspot.com',\r\n  messagingSenderId: '852882682760',\r\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\r\n  measurementId: 'G-NB8J25CEJN',\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email, photoURL } = userAuth;\r\n    const createdAt = new Date();\r\n    const trackStock = [];\r\n    const activeTrip = false;\r\n\r\n    try {\r\n      await userRef.set({\r\n        activeTrip,\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n        createdAt,\r\n        trackStock,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\n//CREATE A NEW TRIP INSTANCE WITH ALL COMPOENTS EMPY\r\nexport const createNewTrip = async (user, tripName, id) => {\r\n  const tripRef = firestore.doc(`trips/${id}`);\r\n\r\n  const snapShot = await tripRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { email } = user;\r\n    const date = new Date();\r\n    const createdAt = date.toDateString();\r\n    const tripImages = [];\r\n    const tripReceipts = [];\r\n    const isActive = true;\r\n    const users = [\r\n      {\r\n        id: user.id,\r\n        email: email,\r\n      },\r\n    ];\r\n\r\n    try {\r\n      await tripRef.set({\r\n        isActive,\r\n        createdAt,\r\n        tripName,\r\n        tripImages,\r\n        tripReceipts,\r\n        users,\r\n      });\r\n      //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\r\n      await updateTripStatus(user.id, id, tripName, createdAt);\r\n    } catch (error) {\r\n      console.log('error creating trip', error.message);\r\n    }\r\n  }\r\n};\r\n\r\n//FIND FRIENDS EMAIL TO JOIN THE GROUP\r\nexport const findMyFriend = async (email) => {\r\n  let users = await userList();\r\n  let tripExist = false;\r\n\r\n  users.map((el) => {\r\n    if (el.email === email && el.activeTrip === true) {\r\n      return (tripExist = el.currentTrip);\r\n    }\r\n  });\r\n\r\n  return tripExist;\r\n};\r\n\r\nexport const updateExpenses = async (userID, x) => {\r\n  let user = await firestore.collection('users').doc(userID);\r\n  let userData = await firestore.collection('users').doc(userID).get();\r\n  let expense = userData.data().expenses;\r\n  let total = expense + x;\r\n  try {\r\n    user.update({\r\n      expenses: total,\r\n    });\r\n  } catch (error) {\r\n    console.log('Error ending trip', error);\r\n  }\r\n};\r\n\r\n//SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\r\nexport const updateTripStatus = async (userID, tripID, tripName, createdAt) => {\r\n  let user = await firestore.collection('users').doc(userID);\r\n  let userRef = await user.get();\r\n  let tripRef = await firestore.collection('trips').doc(tripID);\r\n\r\n  let tripInfo = {\r\n    id: tripID,\r\n    name: tripName,\r\n    date: createdAt,\r\n  };\r\n\r\n  let newUser = {\r\n    id: userID,\r\n    email: userRef.data().email,\r\n  };\r\n  try {\r\n    user.update({\r\n      activeTrip: true,\r\n      trips: firebase.firestore.FieldValue.arrayUnion(tripInfo),\r\n      currentTrip: tripID,\r\n    });\r\n\r\n    console.log(newUser);\r\n    tripRef.update({\r\n      users: firebase.firestore.FieldValue.arrayUnion(newUser),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n};\r\n\r\nexport const tripBalance = async (tripId) => {\r\n  let x = []\r\n  let trips = await tripList()\r\n  let tripIndex = 0\r\n  trips.map((ele, i) => {\r\n      if (ele.id === tripId){tripIndex =  i}\r\n  })\r\n  let users = trips[tripIndex].data().users\r\n  //let numOfUsers = users.length\r\n  users.map(async (userId) => {\r\n      let user = await firestore.collection('users').doc(userId);\r\n      let userData = await firestore.collection('users').doc(userId).get()\r\n      let expense = userData.data().expenses\r\n      x.push({ name:userData.data().displayName, balance:expense})\r\n      try {\r\n          user.update({\r\n            expenses: 0,\r\n          });\r\n        } catch (error) {\r\n          console.log('Error adding stock', error);\r\n        }\r\n      return 0\r\n  })\r\n  let trip = await firestore.collection('trips').doc(tripId);\r\n  try {\r\n      trip.update({\r\n          balance: firebase.firestore.FieldValue.arrayUnion(x)\r\n      });\r\n  } catch (error) {\r\n      console.log('Error adding stock', error);\r\n  }\r\n}\r\n\r\nexport const getTripData = async (tripID) => {\r\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\r\n  let tripData = tripRef.data();\r\n  let obj = {\r\n    name: tripData.tripName,\r\n    date: tripData.createdAt,\r\n  };\r\n\r\n  return obj;\r\n};\r\n\r\nexport const endTripStatus = async (userID) => {\r\n  let user = await firestore.collection('users').doc(userID);\r\n  console.log(user);\r\n  try {\r\n    user.update({\r\n      activeTrip: false,\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n};\r\n\r\nexport const retrieveImages = async (user) => {\r\n  let currentTrip = '';\r\n  if (user.queryID) {\r\n    currentTrip = user.queryID;\r\n    console.log(currentTrip);\r\n  } else {\r\n    currentTrip = user.currentTrip;\r\n  }\r\n  let tripImages = [];\r\n  try {\r\n    let ref = await firestore.collection('trips').doc(currentTrip).get();\r\n    let data = await ref.data();\r\n    tripImages = data.tripImages;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  return tripImages.reverse();\r\n};\r\n\r\n// UPDATE QUOTE FOR PROFILE\r\nexport const updateQuote = async (userID, quote) => {\r\n  console.log('running');\r\n  let user = await firestore.collection('users').doc(userID);\r\n\r\n  try {\r\n    user.update({\r\n      quote: quote,\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding quote', error);\r\n  }\r\n};\r\n\r\nexport const singleQuery = async (id, tripID) => {\r\n  let userRef = await firestore.collection('users').doc(id);\r\n  try {\r\n    userRef.update({\r\n      queryID: tripID,\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding image', error);\r\n  }\r\n};\r\n\r\nexport const fetchTripData = async (tripID) => {\r\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\r\n  return tripRef.data();\r\n};\r\n\r\nexport const userList = async () => {\r\n  let userArr = [];\r\n\r\n  let users = await firestore.collection('users').get();\r\n  users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\r\n\r\n  if (userArr.length > 0) {\r\n    console.log(userArr);\r\n    return userArr;\r\n  }\r\n};\r\n\r\nexport const balance = async (tripId) => {\r\n  let trip = await firestore.collection('trips').doc(tripId).get();\r\n  return trip.balance;\r\n};\r\n\r\nexport const tripList = async () => {\r\n  let userArr = [];\r\n\r\n  let users = await firestore.collection('trips').get();\r\n  // users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\r\n  return users.docs;\r\n  // if (userArr.length > 0) {\r\n  //   console.log(userArr);\r\n  //   return userArr;\r\n  // }\r\n};\r\n\r\nexport const endTrip = async (userID, tripID) => {\r\n  let user = await firestore.collection('users').doc(userID);\r\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\r\n  let tripData = tripRef.data();\r\n  let users = tripData.users;\r\n  try {\r\n    user.update({\r\n      activeTrip: false,\r\n      currentTrip: '',\r\n    });\r\n  } catch (error) {\r\n    console.log('Error ending trip', error);\r\n  }\r\n  try {\r\n    let emails = [];\r\n    users.map(async (user) => {\r\n      emails.push(user.email);\r\n    });\r\n    return emails;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const updateImageArr = async (url, tripID) => {\r\n  const docID = tripID;\r\n  let imageArr = await firestore.collection('trips').doc(docID);\r\n  const date = new Date();\r\n  const createdAt = date.toDateString();\r\n  // let item = {\r\n  //   url: url,\r\n  //   id: id,\r\n  //   createdAt: createdAt,\r\n  //   amount: imgAmount,\r\n  // };\r\n  try {\r\n    console.log('running update');\r\n    imageArr.update({\r\n      tripImages: firebase.firestore.FieldValue.arrayUnion(url),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding image', error);\r\n  }\r\n};\r\nconst sentinel = async (data, upF, currentTrip) => {\r\n  let tripID = currentTrip;\r\n  let doc = await firestore.collection('trips').doc(tripID);\r\n\r\n  let observer = await doc.onSnapshot(\r\n    async (docSnapshot) => {\r\n      let getDoc = await doc.get().then(async (doc) => {\r\n        if (!doc.exists) {\r\n          console.log('No such document!');\r\n        } else if (data.length !== doc.data().tripReceipts.length) {\r\n          upF();\r\n        }\r\n      });\r\n    },\r\n    (err) => {\r\n      console.log(`Encountered error: ${err}`);\r\n    }\r\n  );\r\n};\r\n\r\nexport const receiptListArr = async (user, updateFunc) => {\r\n  let currentTrip = '';\r\n  if (user.queryID) {\r\n    currentTrip = user.queryID;\r\n  } else {\r\n    currentTrip = user.currentTrip;\r\n  }\r\n  var receiptArr = [];\r\n  let arrRef = await firestore.collection('trips').doc(currentTrip);\r\n  let getDoc = await arrRef\r\n    .get()\r\n    .then((doc) => {\r\n      if (!doc.exists) {\r\n        console.log('No such document!');\r\n      } else {\r\n        receiptArr = doc.data().tripReceipts;\r\n        sentinel(receiptArr, updateFunc, currentTrip);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log('Error getting document', err);\r\n    });\r\n\r\n  return receiptArr;\r\n};\r\n\r\nexport const updateReceiptArr = async (id, imgURL, imgAmount, currentTrip) => {\r\n  let tripID = currentTrip;\r\n  let receiptArr = await firestore.collection('trips').doc(tripID);\r\n  const date = new Date();\r\n  const createdAt = date.toDateString();\r\n  let item = {\r\n    url: imgURL,\r\n    id: id,\r\n    createdAt: createdAt,\r\n    amount: imgAmount,\r\n  };\r\n\r\n  try {\r\n    receiptArr.update({\r\n      tripReceipts: firebase.firestore.FieldValue.arrayUnion(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n};\r\n\r\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\r\n  const userRef = firestore.doc(`images/${id}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const imgUrl = imgURL;\r\n    const amount = imgAmount;\r\n    const date = new Date();\r\n    const createdAt = date.toDateString();\r\n\r\n    try {\r\n      await userRef.set({\r\n        imgUrl,\r\n        createdAt,\r\n        amount,\r\n      });\r\n    } catch (error) {\r\n      console.log('error saving receipt', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const updateTracking = async (user, item) => {\r\n  const { id } = user;\r\n  let stockArr = await firestore.collection('users').doc(id);\r\n\r\n  try {\r\n    stockArr.update({\r\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n};\r\n\r\nexport const deleteTracking = async (user, item) => {\r\n  const { id } = user;\r\n  let stockArr = await firestore.collection('users').doc(id);\r\n\r\n  try {\r\n    stockArr.update({\r\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error deleting stock', error);\r\n  }\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n  // console.log(auth.signInWithPopup(provider))\r\n};\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}