{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU\",\n  authDomain: \"paxanimi-73b93.firebaseapp.com\",\n  databaseURL: \"https://paxanimi-73b93.firebaseio.com\",\n  projectId: \"paxanimi-73b93\",\n  storageBucket: \"paxanimi-73b93.appspot.com\",\n  messagingSenderId: \"852882682760\",\n  appId: \"1:852882682760:web:415f87c7be9f7eb4a6c03d\",\n  measurementId: \"G-NB8J25CEJN\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n    const createdAt = new Date();\n    const trackStock = [];\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const userList = async () => {\n  let users = await firestore.collection('users').get();\n  let userSnapShot = users.docs.map(doc => console.log(doc));\n  console.log(users, userSnapShot); // try {\n  //   stockArr.update({\n  //     trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n  // });\n  // }catch (error){\n  //   console.log('Error deleting stock', error)\n  // }\n};\nexport const updateTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const deleteTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n    });\n  } catch (error) {\n    console.log('Error deleting stock', error);\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider); // console.log(auth.signInWithPopup(provider))\n};\nexport default firebase;","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","photoURL","createdAt","Date","trackStock","set","error","console","log","message","userList","users","collection","userSnapShot","docs","map","updateTracking","user","item","id","stockArr","update","FieldValue","arrayUnion","deleteTracking","arrayRemove","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU\",\n  authDomain: \"paxanimi-73b93.firebaseapp.com\",\n  databaseURL: \"https://paxanimi-73b93.firebaseio.com\",\n  projectId: \"paxanimi-73b93\",\n  storageBucket: \"paxanimi-73b93.appspot.com\",\n  messagingSenderId: \"852882682760\",\n  appId: \"1:852882682760:web:415f87c7be9f7eb4a6c03d\",\n  measurementId: \"G-NB8J25CEJN\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    \n    const { displayName, email, photoURL } = userAuth;\n    const createdAt = new Date();\n    const trackStock = []\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n  return userRef;\n};\n\n\n\nexport const userList = async () => {\n\n  \n  let users = await firestore.collection('users').get()\n  let userSnapShot = users.docs.map(doc => console.log(doc));\n  console.log(users, userSnapShot)\n\n  // try {\n  //   stockArr.update({\n  //     trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n  // });\n  // }catch (error){\n  //   console.log('Error deleting stock', error)\n  // }\n  \n}\n\n\nexport const updateTracking = async (user, item) => {\n\n  const {id} = user\n  let stockArr = await firestore.collection('users').doc(id)\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item)\n  });\n  }catch (error){\n    console.log('Error adding stock', error)\n  }\n  \n}\n\nexport const deleteTracking = async (user, item) => {\n\n  const {id} = user\n  let stockArr = await firestore.collection('users').doc(id)\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n  });\n  }catch (error){\n    console.log('Error deleting stock', error)\n  }\n  \n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider)\n  // console.log(auth.signInWithPopup(provider))\n  };\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}