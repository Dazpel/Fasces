{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/SignIn/SignIn.jsx\";\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport GoogleButton from 'react-google-button';\nimport { auth, signInWithGoogle } from '../firebase/firebase.utils';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.success.light\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  google: {\n    backgroundImage: '../btn_google_signin_light_normal_web.png',\n    color: 'white'\n  },\n  gap: {\n    marginTop: 20\n  }\n}));\nexport default function SignIn({\n  history\n}) {\n  //State Hook\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //Destructure user state so we avoid doing user.displayname, user.Email, etc...\n\n    const {\n      email,\n      password\n    } = user;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setUser({\n        email: '',\n        password: ''\n      });\n      console.log('after suignin'); // history.push('/Profile');\n    } catch (error) {\n      alert('The email or password you entered is not valid, please, try again');\n    }\n  };\n\n  const authGoogle = async () => {\n    try {\n      await signInWithGoogle(); // history.push('/Profile');\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }; //Destructure user state so we avoid doing user.displayname, user.Email, etc...\n\n\n  const {\n    email,\n    password\n  } = user;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    onClick: authGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Sign in\")));\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/SignIn/SignIn.jsx"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Grid","LockOutlinedIcon","Typography","makeStyles","Container","Link","GoogleButton","auth","signInWithGoogle","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","success","light","form","width","submit","google","backgroundImage","color","gap","SignIn","history","user","setUser","email","password","handleSubmit","e","preventDefault","signInWithEmailAndPassword","console","log","error","alert","authGoogle","handleChange","name","value","target","prevState","classes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\nimport GoogleButton from 'react-google-button';\n\nimport { auth, signInWithGoogle } from '../firebase/firebase.utils';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.success.light,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  google: {\n    backgroundImage: '../btn_google_signin_light_normal_web.png',\n    color: 'white',\n  },\n  gap: {\n    marginTop: 20,\n  },\n}));\n\nexport default function SignIn({ history }) {\n  //State Hook\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    //Destructure user state so we avoid doing user.displayname, user.Email, etc...\n    const { email, password } = user;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setUser({\n        email: '',\n        password: '',\n      });\n      console.log('after suignin');\n      // history.push('/Profile');\n    } catch (error) {\n      alert(\n        'The email or password you entered is not valid, please, try again'\n      );\n    }\n  };\n\n  const authGoogle = async () => {\n    try {\n      await signInWithGoogle();\n      // history.push('/Profile');\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setUser((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  //Destructure user state so we avoid doing user.displayname, user.Email, etc...\n  const { email, password } = user;\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon onClick={authGoogle}/>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n       \n      </div>\n      \n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}