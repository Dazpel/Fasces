{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Trip/newTrip.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { useHistory } from \"react-router-dom\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createNewTrip } from \"../firebase/firebase.utils\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  //   const top = 50 + rand();\n  //   const left = 50 + rand();\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function NewTrip({\n  user\n}) {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = e => {\n    setName(e.target.value);\n  };\n\n  const generateID = () => {\n    let guid = () => {\n      let s4 = () => {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      }; //return id of format 'aaaaaaaaaaaa'\n\n\n      return s4() + s4() + s4();\n    };\n\n    return guid();\n  };\n\n  const history = useHistory();\n\n  const saveTripName = async (e, name) => {\n    e.preventDefault();\n    let id = await generateID();\n    await createNewTrip(user, name, id);\n    history.push(\"/\");\n  };\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"New Trip\"), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: e => saveTripName(e, name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Name\",\n    variant: \"outlined\",\n    onChange: e => {\n      handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\" // className={classes.button}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: \"#2769a7\"\n    },\n    variant: \"contained\",\n    color: \"default\",\n    size: \"small\" // className={classes.button}\n    ,\n    startIcon: /*#__PURE__*/React.createElement(CreateIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 20\n      }\n    }),\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"New trip\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, body));\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Trip/newTrip.jsx"],"names":["React","makeStyles","Modal","CreateIcon","useHistory","AddCircleOutlineIcon","Button","TextField","createNewTrip","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","NewTrip","user","classes","modalStyle","useState","open","setOpen","name","setName","handleOpen","handleClose","handleChange","e","target","value","generateID","guid","s4","floor","toString","substring","history","saveTripName","preventDefault","id","push","body","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { useHistory } from \"react-router-dom\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createNewTrip } from \"../firebase/firebase.utils\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  //   const top = 50 + rand();\n  //   const left = 50 + rand();\n\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function NewTrip({ user }) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const generateID = () => {\n    let guid = () => {\n      let s4 = () => {\n        return Math.floor((1 + Math.random()) * 0x10000)\n          .toString(16)\n          .substring(1);\n      };\n      //return id of format 'aaaaaaaaaaaa'\n      return s4() + s4() + s4();\n    };\n\n    return guid();\n  };\n  const history = useHistory();\n\n  const saveTripName = async (e, name) => {\n    e.preventDefault();\n\n    let id = await generateID();\n    await createNewTrip(user, name, id);\n    history.push(\"/\");\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h3 id=\"simple-modal-title\">New Trip</h3>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => saveTripName(e, name)}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          onChange={(e) => {\n            handleChange(e);\n          }}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          // className={classes.button}\n        >\n          Save\n        </Button>\n      </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <Button\n        style={{ color: \"#2769a7\" }}\n        variant=\"contained\"\n        color=\"default\"\n        size=\"small\"\n        // className={classes.button}\n        startIcon={<CreateIcon />}\n        onClick={handleOpen}\n      >\n        New trip\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}