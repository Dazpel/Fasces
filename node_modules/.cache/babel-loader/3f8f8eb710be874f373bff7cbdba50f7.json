{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/App.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { auth, createUserProfileDocument } from './Components/firebase/firebase.utils';\nimport Home from './Components/Home/Home';\nimport './App.css';\nimport LogIn from './Components/LogIn/LogIn';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: '',\n      isData: false\n    };\n    this.unsubscribeFromAuth = null;\n\n    this.componentDidMount = () => {\n      //Call auth method from Firebase to check whether or not we have an active session\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        //Check if user logged in\n        if (userAuth) {\n          //If logged in, retrieve the data from user and set it to State\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot(snapShot => {\n            this.setState({\n              currentUser: {\n                id: snapShot.id,\n                ...snapShot.data()\n              },\n              isData: true\n            });\n          });\n        } //If logged out, clean state and set user to null\n        else {\n            this.setState({\n              currentUser: userAuth,\n              isData: false\n            });\n          }\n      });\n    };\n  }\n\n  //On log out clean session data and set it to null\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  /* END OF TRACKING USER STATUS*/\n\n  /* START OF TRACK IF USER LOGGED IN OR NOT, PASS DOWN TO ALL COMPONENTS */\n\n\n  render() {\n    const {\n      currentUser,\n      isData\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n        isLoad: this.isLoad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n      path: \"/welcome\",\n      component: Welcome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/App.js"],"names":["React","Component","Switch","Route","auth","createUserProfileDocument","Home","LogIn","App","state","currentUser","isData","unsubscribeFromAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","componentWillUnmount","render","console","log","props","isLoad","Welcome"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SACEC,IADF,EAEEC,yBAFF,QAGO,sCAHP;AAIA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCQ,KADyC,GACjC;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,MAAM,EAAE;AAFF,KADiC;AAAA,SAOzCC,mBAPyC,GAOnB,IAPmB;;AAAA,SASzCC,iBATyC,GASrB,MAAM;AACxB;AACA,WAAKD,mBAAL,GAA2BR,IAAI,CAACU,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AACrE;AACA,YAAIA,QAAJ,EAAc;AACZ;AACA,gBAAMC,OAAO,GAAG,MAAMX,yBAAyB,CAACU,QAAD,CAA/C;AAEAC,UAAAA,OAAO,CAACC,UAAR,CAAoBC,QAAD,IAAc;AAC/B,iBAAKC,QAAL,CAAc;AACZT,cAAAA,WAAW,EAAE;AACXU,gBAAAA,EAAE,EAAEF,QAAQ,CAACE,EADF;AAEX,mBAAGF,QAAQ,CAACG,IAAT;AAFQ,eADD;AAKZV,cAAAA,MAAM,EAAE;AALI,aAAd;AAOD,WARD;AASD,SAbD,CAcA;AAdA,aAeK;AACH,iBAAKQ,QAAL,CAAc;AAAET,cAAAA,WAAW,EAAEK,QAAf;AAAyBJ,cAAAA,MAAM,EAAE;AAAjC,aAAd;AACD;AACF,OApB0B,CAA3B;AAqBD,KAhCwC;AAAA;;AAkCzC;AACAW,EAAAA,oBAAoB,GAAG;AACrB,SAAKV,mBAAL;AACD;AACD;;AACA;;;AAIAW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA0B,KAAKF,KAArC;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AACM,MAAA,SAAS,EAAGiB,KAAD,iBAAW,oBAAC,IAAD,oBAAUA,KAAV;AAAiB,QAAA,MAAM,EAAE,KAAKC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAIA,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,UAArB;AAAgC,MAAA,SAAS,EAAEC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADF,CADF;AAUD;;AAzDwC","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  auth,\n  createUserProfileDocument,\n} from './Components/firebase/firebase.utils';\nimport Home from './Components/Home/Home';\nimport './App.css';\nimport LogIn from './Components/LogIn/LogIn';\n\nexport default class App extends Component {\n  state = {\n    currentUser: '',\n    isData: false,\n  };\n\n  //method to set session to null.\n  unsubscribeFromAuth = null;\n\n  componentDidMount = () => {\n    //Call auth method from Firebase to check whether or not we have an active session\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      //Check if user logged in\n      if (userAuth) {\n        //If logged in, retrieve the data from user and set it to State\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot((snapShot) => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data(),\n            },\n            isData: true,\n          });\n        });\n      }\n      //If logged out, clean state and set user to null\n      else {\n        this.setState({ currentUser: userAuth, isData: false });\n      }\n    });\n  };\n\n  //On log out clean session data and set it to null\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  /* END OF TRACKING USER STATUS*/\n  /* START OF TRACK IF USER LOGGED IN OR NOT, PASS DOWN TO ALL COMPONENTS */\n\n  \n\n  render() {\n    const { currentUser, isData } = this.state;\n    console.log(this.state);\n\n    return (\n      <div>\n        <Switch>\n        <Route path=\"/\"\n              component={(props) => <Home {...props} isLoad={this.isLoad} />}\n            />\n        <ProtectedRoute path='/welcome' component={Welcome} />\n        </Switch>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}