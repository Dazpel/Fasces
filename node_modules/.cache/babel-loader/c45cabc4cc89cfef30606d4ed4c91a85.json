{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Billy's PC\\\\Desktop\\\\Fasces\\\\src\\\\Components\\\\Chat\\\\Chat.jsx\";\nimport React, { Component } from 'react';\nimport Talk from 'talkjs';\nimport { userList } from '../firebase/firebase.utils';\nimport './chat.css';\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n    this.state = {\n      groupUsers: ''\n    };\n  }\n\n  async componentDidMount() {\n    const setParticipants = (users, currentUser) => {\n      let x = [];\n      users.map((el, i) => {\n        if (el.id !== currentUser) {\n          x.push(new Talk.User({\n            id: el.id,\n            name: el.displayName,\n            email: el.email,\n            photoUrl: el.photoURL,\n            welcomeMessage: 'Hey there! How are you? :-)'\n          }));\n        }\n      });\n      return x;\n    };\n\n    const currentUser = this.props.currentUser;\n    let groupUsers = await userList();\n    this.setState({\n      groupUsers: groupUsers\n    });\n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email,\n        photoUrl: currentUser.photoURL,\n        welcomeMessage: 'Hey there! How are you? :-)'\n      });\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me\n      });\n      let participants = setParticipants(this.state.groupUsers, currentUser.id);\n      var conversation = window.talkSession.getOrCreateConversation('splitexproject3');\n      conversation.setParticipant(me);\n      participants.map(el => {\n        conversation.setParticipant(el);\n      });\n      conversation.setAttributes({\n        photoUrl: 'https://avatars0.githubusercontent.com/u/4854004?s=280&v=4',\n        subject: 'Testing TalkJS'\n      });\n      var chatbox = window.talkSession.createChatbox(conversation);\n      chatbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    console.log(this.state.groupUsers);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox-container\",\n      ref: this.talkjsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Billy's PC/Desktop/Fasces/src/Components/Chat/Chat.jsx"],"names":["React","Component","Talk","userList","Chat","constructor","props","talkjsContainer","createRef","state","groupUsers","componentDidMount","setParticipants","users","currentUser","x","map","el","i","id","push","User","name","displayName","email","photoUrl","photoURL","welcomeMessage","setState","ready","then","me","window","talkSession","Session","appId","participants","conversation","getOrCreateConversation","setParticipant","setAttributes","subject","chatbox","createChatbox","mount","current","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Talk from 'talkjs';\r\nimport { userList } from '../firebase/firebase.utils';\r\n\r\nimport './chat.css';\r\n\r\nexport default class Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.talkjsContainer = React.createRef();\r\n    this.state = {\r\n      groupUsers: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const setParticipants = (users, currentUser) => {\r\n      let x = [];\r\n\r\n      users.map((el, i) => {\r\n        if (el.id !== currentUser) {\r\n          x.push(\r\n            new Talk.User({\r\n              id: el.id,\r\n              name: el.displayName,\r\n              email: el.email,\r\n              photoUrl: el.photoURL,\r\n              welcomeMessage: 'Hey there! How are you? :-)',\r\n            })\r\n          );\r\n        }\r\n      });\r\n\r\n      return x;\r\n    };\r\n    const currentUser = this.props.currentUser;\r\n    let groupUsers = await userList();\r\n\r\n    this.setState({\r\n      groupUsers: groupUsers,\r\n    });\r\n\r\n    Talk.ready.then(() => {\r\n      var me = new Talk.User({\r\n        id: currentUser.id,\r\n        name: currentUser.displayName,\r\n        email: currentUser.email,\r\n        photoUrl: currentUser.photoURL,\r\n        welcomeMessage: 'Hey there! How are you? :-)',\r\n      });\r\n\r\n      window.talkSession = new Talk.Session({\r\n        appId: 'taa7PJf6',\r\n        me: me,\r\n      });\r\n\r\n      let participants = setParticipants(this.state.groupUsers, currentUser.id);\r\n\r\n      var conversation = window.talkSession.getOrCreateConversation(\r\n        'splitexproject3'\r\n      );\r\n      conversation.setParticipant(me);\r\n\r\n      participants.map((el) => {\r\n        conversation.setParticipant(el);\r\n      });\r\n\r\n      conversation.setAttributes({\r\n        photoUrl: 'https://avatars0.githubusercontent.com/u/4854004?s=280&v=4',\r\n        subject: 'Testing TalkJS',\r\n      });\r\n\r\n\r\n      var chatbox = window.talkSession.createChatbox(conversation);\r\n      chatbox.mount(this.talkjsContainer.current);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.groupUsers);\r\n    return <div className=\"chatbox-container\" ref={this.talkjsContainer}></div>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}