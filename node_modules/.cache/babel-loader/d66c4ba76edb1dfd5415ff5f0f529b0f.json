{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\n  projectId: 'paxanimi-73b93',\n  storageBucket: 'paxanimi-73b93.appspot.com',\n  messagingSenderId: '852882682760',\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\n  measurementId: 'G-NB8J25CEJN'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n    const createdAt = new Date();\n    const trackStock = [];\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const userList = async () => {\n  let userArr = [];\n  let users = await firestore.collection('users').get();\n  users.docs.map((doc, i) => userArr[i] = {\n    id: doc.id,\n    ...doc.data()\n  });\n\n  if (userArr.length > 0) {\n    console.log(userArr);\n    return userArr;\n  }\n};\nexport const sentinel = async state => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  let doc = await firestore.collection('images').doc(docID);\n  let observer = doc.onSnapshot(docSnapshot => {\n    console.log(`Sentinel triggered `, docSnapshot); // ...\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n};\nexport const receiptListArr = async state => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  var receiptArr = [];\n  let arrRef = await firestore.collection('images').doc(docID);\n  let getDoc = await arrRef.get().then(doc => {\n    if (!doc.exists) {\n      console.log('No such document!');\n    } else {\n      receiptArr = doc.data().receiptImg;\n    }\n  }).catch(err => {\n    console.log('Error getting document', err);\n  });\n  return receiptArr;\n};\nexport const updateReceiptArr = async (id, imgURL, imgAmount) => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  let receiptArr = await firestore.collection('images').doc(docID);\n  const date = new Date();\n  const createdAt = date.toDateString();\n  let item = {\n    url: imgURL,\n    id: id,\n    createdAt: createdAt,\n    amount: imgAmount\n  };\n\n  try {\n    receiptArr.update({\n      receiptImg: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\n  const userRef = firestore.doc(`images/${id}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const imgUrl = imgURL;\n    const amount = imgAmount;\n    const date = new Date();\n    const createdAt = date.toDateString();\n\n    try {\n      await userRef.set({\n        imgUrl,\n        createdAt,\n        amount\n      });\n    } catch (error) {\n      console.log('error saving receipt', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const updateTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const deleteTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n    });\n  } catch (error) {\n    console.log('Error deleting stock', error);\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider); // console.log(auth.signInWithPopup(provider))\n};\nexport default firebase;","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","photoURL","createdAt","Date","trackStock","set","error","console","log","message","userList","userArr","users","collection","docs","map","i","id","data","length","sentinel","state","docID","observer","onSnapshot","docSnapshot","err","receiptListArr","receiptArr","arrRef","getDoc","then","receiptImg","catch","updateReceiptArr","imgURL","imgAmount","date","toDateString","item","url","amount","update","FieldValue","arrayUnion","saveReceipt","imgUrl","updateTracking","user","stockArr","deleteTracking","arrayRemove","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\n  projectId: 'paxanimi-73b93',\n  storageBucket: 'paxanimi-73b93.appspot.com',\n  messagingSenderId: '852882682760',\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\n  measurementId: 'G-NB8J25CEJN',\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email, photoURL } = userAuth;\n    const createdAt = new Date();\n    const trackStock = [];\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const userList = async () => {\n  let userArr = [];\n\n  let users = await firestore.collection('users').get();\n  users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\n\n  if (userArr.length > 0) {\n    console.log(userArr);\n    return userArr;\n  }\n};\n\nexport const sentinel = async (state) => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n\n   let doc = await firestore.collection('images').doc(docID);\n\n   let observer = doc.onSnapshot(docSnapshot => {\n    console.log(`Sentinel triggered `, docSnapshot);\n    // ...\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n\n};\n\nexport const receiptListArr = async (state) => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  var receiptArr = [];\n\n \n\n  let arrRef = await firestore.collection('images').doc(docID);\n  let getDoc = await arrRef\n    .get()\n    .then((doc) => {\n      if (!doc.exists) {\n        console.log('No such document!');\n      } else {\n        receiptArr = doc.data().receiptImg;\n      }\n    })\n    .catch((err) => {\n      console.log('Error getting document', err);\n    });\n\n  \n  return receiptArr\n};\n\nexport const updateReceiptArr = async (id, imgURL, imgAmount) => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  let receiptArr = await firestore.collection('images').doc(docID);\n  const date = new Date();\n  const createdAt = date.toDateString();\n  let item = {\n    url: imgURL,\n    id: id,\n    createdAt: createdAt,\n    amount: imgAmount,\n  };\n\n  try {\n    receiptArr.update({\n      receiptImg: firebase.firestore.FieldValue.arrayUnion(item),\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\n\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\n  const userRef = firestore.doc(`images/${id}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const imgUrl = imgURL;\n    const amount = imgAmount;\n    const date = new Date();\n    const createdAt = date.toDateString();\n\n    try {\n      await userRef.set({\n        imgUrl,\n        createdAt,\n        amount,\n      });\n    } catch (error) {\n      console.log('error saving receipt', error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const updateTracking = async (user, item) => {\n  const { id } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item),\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\n\nexport const deleteTracking = async (user, item) => {\n  const { id } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item),\n    });\n  } catch (error) {\n    console.log('Error deleting stock', error);\n  }\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n  // console.log(auth.signInWithPopup(provider))\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}