{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/groupImage/GroupImage.jsx\";\nimport React, { Component } from 'react';\nimport GroupImageFolder from './GroupImageFolder';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Grid from '@material-ui/core/Grid';\nimport ToastMessage from '../Toast/toastMessage';\nimport actions from '../../RouteContainer/axiosCalls';\nimport { retrieveImages } from '../firebase/firebase.utils';\nimport Progress from '../progress/Progress';\nimport './groupImage.css';\nexport default class GroupImage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: undefined,\n      imageArr: '',\n      saved: false\n    };\n\n    this.updateArr = async user => {\n      let arr = await retrieveImages(user); // this.setState({\n      //   imageArr: arr,\n      // });\n    };\n\n    this.handleFileUpload = async e => {\n      console.log('The file to be uploaded is: ', e.target.files[0]);\n      const uploadData = new FormData(); // imageUrl => this name has to be the same as in the model since we pass\n      // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n      uploadData.append('imageUrl', e.target.files[0]);\n      await actions.uploadToCD(uploadData).then(response => {\n        // console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        this.setState({\n          imageUrl: response.data.secure_url,\n          saved: false\n        });\n      }).catch(err => {\n        console.log('Error while uploading the file: ', err);\n      });\n    };\n\n    this.handleSubmit = async () => {\n      await actions.uploadToDB(this.state);\n      this.setState({\n        imageUrl: undefined,\n        saved: true\n      });\n      this.updateArr();\n    };\n  }\n\n  componentDidMount() {\n    this.updateArr(this.props.currentUser, this.state.imageArr);\n  } // this method handles just the file upload\n\n\n  render() {\n    let onUp = false;\n    let onSaved = this.state.saved;\n    this.state.imageUrl === undefined ? onUp = false : onUp = true;\n    onSaved ? onSaved = true : onSaved = false;\n    const {\n      imageArr\n    } = this.state;\n    console.log(imageArr);\n    return (\n      /*#__PURE__*/\n      // <div>\n      //   <div className=\"folderContainer\">\n      //     <GroupImageFolder imageArr={imageArr} />\n      //   </div>\n      //   <Grid\n      //     container\n      //     justify=\"center\"\n      //     alignItems=\"center\"\n      //     className=\"folderBtn\"\n      //   >\n      //     <Button\n      //       variant=\"contained\"\n      //       color=\"primary\"\n      //       size=\"small\"\n      //       // className={classes.button}\n      //       startIcon={<SaveIcon />}\n      //       onClick={() => this.handleSubmit(this.state.imageUrl)}\n      //     >\n      //       Save\n      //     </Button>\n      //     <input\n      //       accept=\"image/*\"\n      //       className=\"uploadFile groupBtn\"\n      //       id=\"contained-button-file\"\n      //       multiple\n      //       type=\"file\"\n      //       onChange={(e) => this.handleFileUpload(e)}\n      //     />\n      //     <label htmlFor=\"contained-button-file\">\n      //       <Button\n      //         variant=\"contained\"\n      //         color=\"default\"\n      //         size=\"small\"\n      //         component=\"span\"\n      //         className=\"groupBtn\"\n      //         startIcon={<CloudUploadIcon />}\n      //       >\n      //         Upload\n      //       </Button>\n      //     </label>\n      //   </Grid>\n      //   {onUp ? <ToastMessage message={'Success, ready to save!'} /> : ''}\n      //   {onSaved ? <ToastMessage message={'Image saved!'} /> : ''}\n      // </div>\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, \"Hello\")\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/groupImage/GroupImage.jsx"],"names":["React","Component","GroupImageFolder","Button","CloudUploadIcon","SaveIcon","Grid","ToastMessage","actions","retrieveImages","Progress","GroupImage","state","imageUrl","undefined","imageArr","saved","updateArr","user","arr","handleFileUpload","e","console","log","target","files","uploadData","FormData","append","uploadToCD","then","response","setState","data","secure_url","catch","err","handleSubmit","uploadToDB","componentDidMount","props","currentUser","render","onUp","onSaved"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GroupImageFolder from './GroupImageFolder';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Grid from '@material-ui/core/Grid';\nimport ToastMessage from '../Toast/toastMessage';\nimport actions from '../../RouteContainer/axiosCalls';\nimport { retrieveImages } from '../firebase/firebase.utils';\nimport Progress from '../progress/Progress';\nimport './groupImage.css';\n\nexport default class GroupImage extends Component {\n  state = {\n    imageUrl: undefined,\n    imageArr: '',\n    saved: false,\n  };\n\n  updateArr = async (user) => {\n    let arr = await retrieveImages(user);\n    \n\n    // this.setState({\n    //   imageArr: arr,\n    // });\n  };\n\n  componentDidMount() {\n  this.updateArr(this.props.currentUser, this.state.imageArr)\n\n  }\n\n  // this method handles just the file upload\n  handleFileUpload = async (e) => {\n    console.log('The file to be uploaded is: ', e.target.files[0]);\n\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append('imageUrl', e.target.files[0]);\n\n    await actions\n      .uploadToCD(uploadData)\n      .then((response) => {\n        // console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        this.setState({ imageUrl: response.data.secure_url, saved: false });\n      })\n      .catch((err) => {\n        console.log('Error while uploading the file: ', err);\n      });\n  };\n\n  // THIS METHOD ADDS THE IMAGE TO THE LIST\n  handleSubmit = async () => {\n    await actions.uploadToDB(this.state);\n\n    this.setState({\n      imageUrl: undefined,\n      saved: true,\n    });\n\n    this.updateArr();\n  };\n\n  render() {\n    let onUp = false;\n    let onSaved = this.state.saved;\n    this.state.imageUrl === undefined ? (onUp = false) : (onUp = true);\n    onSaved ? (onSaved = true) : (onSaved = false);\n\n    const { imageArr } = this.state;\n    console.log(imageArr)\n    return (\n      // <div>\n      //   <div className=\"folderContainer\">\n      //     <GroupImageFolder imageArr={imageArr} />\n      //   </div>\n\n      //   <Grid\n      //     container\n      //     justify=\"center\"\n      //     alignItems=\"center\"\n      //     className=\"folderBtn\"\n      //   >\n      //     <Button\n      //       variant=\"contained\"\n      //       color=\"primary\"\n      //       size=\"small\"\n      //       // className={classes.button}\n      //       startIcon={<SaveIcon />}\n      //       onClick={() => this.handleSubmit(this.state.imageUrl)}\n      //     >\n      //       Save\n      //     </Button>\n      //     <input\n      //       accept=\"image/*\"\n      //       className=\"uploadFile groupBtn\"\n      //       id=\"contained-button-file\"\n      //       multiple\n      //       type=\"file\"\n      //       onChange={(e) => this.handleFileUpload(e)}\n      //     />\n      //     <label htmlFor=\"contained-button-file\">\n      //       <Button\n      //         variant=\"contained\"\n      //         color=\"default\"\n      //         size=\"small\"\n      //         component=\"span\"\n      //         className=\"groupBtn\"\n      //         startIcon={<CloudUploadIcon />}\n      //       >\n      //         Upload\n      //       </Button>\n      //     </label>\n      //   </Grid>\n      //   {onUp ? <ToastMessage message={'Success, ready to save!'} /> : ''}\n      //   {onSaved ? <ToastMessage message={'Image saved!'} /> : ''}\n      // </div>\n      <div>Hello</div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}