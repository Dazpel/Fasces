{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\n  projectId: 'paxanimi-73b93',\n  storageBucket: 'paxanimi-73b93.appspot.com',\n  messagingSenderId: '852882682760',\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\n  measurementId: 'G-NB8J25CEJN'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n    const createdAt = new Date();\n    const trackStock = [];\n    const activeTrip = false;\n\n    try {\n      await userRef.set({\n        activeTrip,\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; //CREATE A NEW TRIP INSTANCE WITH ALL COMPOENTS EMPY\n\nexport const createNewTrip = async (user, tripName, id) => {\n  const tripRef = firestore.doc(`trips/${id}`);\n  const snapShot = await tripRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      email\n    } = user;\n    const createdAt = new Date();\n    const tripImages = [];\n    const tripReceipts = [];\n    const isActive = true;\n    const users = [email];\n\n    try {\n      await tripRef.set({\n        isActive,\n        createdAt,\n        tripName,\n        tripImages,\n        tripReceipts,\n        users\n      }); //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n\n      await updateTripStatus(user.id);\n    } catch (error) {\n      console.log('error creating trip', error.message);\n    }\n  }\n};\nexport const updateExpenses = async (userID, x) => {\n  let user = await firestore.collection('users').doc(userID);\n  let userData = await firestore.collection('users').doc(userID).get();\n  let expense = userData.data().expenses;\n  let total = expense + x;\n\n  try {\n    user.update({\n      expenses: total\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const userList = async () => {\n  let userArr = [];\n  let users = await firestore.collection('users').get();\n  users.docs.map((doc, i) => userArr[i] = {\n    id: doc.id,\n    ...doc.data()\n  });\n\n  if (userArr.length > 0) {\n    console.log(userArr);\n    return userArr;\n  }\n};\nexport const balance = async tripId => {\n  let trip = await firestore.collection('trips').doc(tripId).get();\n  return trip.balance;\n};\nexport const tripList = async () => {\n  let userArr = [];\n  let users = await firestore.collection('trips').get(); // users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\n\n  return users.docs; // if (userArr.length > 0) {\n  //   console.log(userArr);\n  //   return userArr;\n  // }\n};\nexport const endTrip = async (userID, tripID) => {\n  let user = await firestore.collection('users').doc(userID);\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\n  let tripData = tripRef.data();\n  let users = tripData.users;\n\n  try {\n    user.update({\n      activeTrip: false,\n      currentTrip: ''\n    });\n  } catch (error) {\n    console.log('Error ending trip', error);\n  }\n\n  try {\n    let emails = [];\n    users.map(async user => {\n      emails.push(user.email);\n    });\n    return emails;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateImageArr = async (url, tripID) => {\n  const docID = tripID;\n  let imageArr = await firestore.collection('trips').doc(docID);\n  const date = new Date();\n  const createdAt = date.toDateString(); // let item = {\n  //   url: url,\n  //   id: id,\n  //   createdAt: createdAt,\n  //   amount: imgAmount,\n  // };\n\n  try {\n    imageArr.update({\n      tripImages: firebase.firestore.FieldValue.arrayUnion(url)\n    });\n  } catch (error) {\n    console.log('Error adding image', error);\n  }\n}; //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n\nexport const updateTripStatus = async (userID, tripID) => {\n  let user = await firestore.collection('users').doc(userID);\n\n  try {\n    user.update({\n      activeTrip: true,\n      trips: firebase.firestore.FieldValue.arrayUnion(tripID),\n      currentTrip: tripID\n    });\n  } catch (error) {\n    console.log('Error creating trip', error);\n  }\n};\nexport const retrieveImages = async user => {\n  const {\n    currentTrip\n  } = user;\n  let tripImages = [];\n\n  try {\n    let ref = await firestore.collection('trips').doc(currentTrip).get();\n    let data = await ref.data();\n    tripImages = data.tripImages;\n  } catch (err) {\n    console.log(err);\n  }\n\n  return tripImages.reverse();\n};\nexport const findMyFriend = async email => {\n  let users = await userList();\n  let tripExist = false;\n  users.map(el => {\n    if (el.email === email && el.activeTrip === true) {\n      return tripExist = el.currentTrip;\n    }\n  });\n  return tripExist;\n};\n\nconst sentinel = async (data, upF) => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  let doc = await firestore.collection('images').doc(docID);\n  let observer = await doc.onSnapshot(async docSnapshot => {\n    let getDoc = await doc.get().then(async doc => {\n      if (!doc.exists) {\n        console.log('No such document!');\n      } else if (data.length !== doc.data().receiptImg.length) {\n        upF();\n      }\n    });\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n};\n\nexport const receiptListArr = async updateFunc => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  var receiptArr = [];\n  let arrRef = await firestore.collection('images').doc(docID);\n  let getDoc = await arrRef.get().then(doc => {\n    if (!doc.exists) {\n      console.log('No such document!');\n    } else {\n      receiptArr = doc.data().receiptImg;\n      sentinel(receiptArr, updateFunc);\n    }\n  }).catch(err => {\n    console.log('Error getting document', err);\n  });\n  return receiptArr;\n};\nexport const updateReceiptArr = async (id, imgURL, imgAmount) => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  let receiptArr = await firestore.collection('images').doc(docID);\n  const date = new Date();\n  const createdAt = date.toDateString();\n  let item = {\n    url: imgURL,\n    id: id,\n    createdAt: createdAt,\n    amount: imgAmount\n  };\n\n  try {\n    receiptArr.update({\n      receiptImg: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\n  const userRef = firestore.doc(`images/${id}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const imgUrl = imgURL;\n    const amount = imgAmount;\n    const date = new Date();\n    const createdAt = date.toDateString();\n\n    try {\n      await userRef.set({\n        imgUrl,\n        createdAt,\n        amount\n      });\n    } catch (error) {\n      console.log('error saving receipt', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const updateTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const deleteTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n    });\n  } catch (error) {\n    console.log('Error deleting stock', error);\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider); // console.log(auth.signInWithPopup(provider))\n};\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Billy's PC/Desktop/Fasces/src/Components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","photoURL","createdAt","Date","trackStock","activeTrip","set","error","console","log","message","createNewTrip","user","tripName","id","tripRef","tripImages","tripReceipts","isActive","users","updateTripStatus","updateExpenses","userID","x","collection","userData","expense","data","expenses","total","update","userList","userArr","docs","map","i","length","balance","tripId","trip","tripList","endTrip","tripID","tripData","currentTrip","emails","push","err","updateImageArr","url","docID","imageArr","date","toDateString","FieldValue","arrayUnion","trips","retrieveImages","ref","reverse","findMyFriend","tripExist","el","sentinel","upF","observer","onSnapshot","docSnapshot","getDoc","then","receiptImg","receiptListArr","updateFunc","receiptArr","arrRef","catch","updateReceiptArr","imgURL","imgAmount","item","amount","saveReceipt","imgUrl","updateTracking","stockArr","deleteTracking","arrayRemove","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\r\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\r\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\r\n  projectId: 'paxanimi-73b93',\r\n  storageBucket: 'paxanimi-73b93.appspot.com',\r\n  messagingSenderId: '852882682760',\r\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\r\n  measurementId: 'G-NB8J25CEJN',\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email, photoURL } = userAuth;\r\n    const createdAt = new Date();\r\n    const trackStock = [];\r\n    const activeTrip = false;\r\n\r\n    try {\r\n      await userRef.set({\r\n        activeTrip,\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n        createdAt,\r\n        trackStock,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\n\r\n//CREATE A NEW TRIP INSTANCE WITH ALL COMPOENTS EMPY\r\nexport const createNewTrip = async (user, tripName, id) => {\r\n  const tripRef = firestore.doc(`trips/${id}`);\r\n\r\n  const snapShot = await tripRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { email } = user;\r\n    const createdAt = new Date();\r\n    const tripImages = [];\r\n    const tripReceipts = []\r\n    const isActive = true;\r\n    const users = [email]\r\n\r\n    try {\r\n      await tripRef.set({\r\n        isActive,\r\n        createdAt,\r\n        tripName,\r\n        tripImages,\r\n        tripReceipts,\r\n        users\r\n      });\r\n      //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\r\n      await updateTripStatus(user.id)\r\n    } catch (error) {\r\n      console.log('error creating trip', error.message);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport const updateExpenses = async (userID, x) => {\r\n\r\n  let user = await firestore.collection('users').doc(userID);\r\n  let userData = await firestore.collection('users').doc(userID).get()\r\n  let expense = userData.data().expenses\r\n  let total = expense + x\r\n  try {\r\n    user.update({\r\n      expenses: total,\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n\r\n}\r\n\r\nexport const userList = async () => {\r\n  let userArr = [];\r\n\r\n  let users = await firestore.collection('users').get();\r\n  users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\r\n\r\n  if (userArr.length > 0) {\r\n    console.log(userArr);\r\n    return userArr;\r\n  }\r\n};\r\n\r\nexport const balance = async (tripId) => {\r\n  let trip = await firestore.collection('trips').doc(tripId).get()\r\n  return trip.balance\r\n}\r\n\r\nexport const tripList = async () => {\r\n  let userArr = [];\r\n\r\n  let users = await firestore.collection('trips').get();\r\n  // users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\r\n  return users.docs\r\n  // if (userArr.length > 0) {\r\n  //   console.log(userArr);\r\n  //   return userArr;\r\n  // }\r\n};\r\n\r\nexport const endTrip = async (userID, tripID) => {\r\n  let user = await firestore.collection('users').doc(userID);\r\n  let tripRef = await firestore.collection('trips').doc(tripID).get();\r\n  let tripData = tripRef.data()\r\n  let users = tripData.users\r\n  try {\r\n    user.update({\r\n      activeTrip: false,\r\n      currentTrip: '',\r\n    });\r\n  } catch (error) {\r\n    console.log('Error ending trip', error);\r\n  }\r\n  try {\r\n    let emails = []\r\n      users.map( async user => {\r\n      emails.push(user.email)\r\n    })\r\n    return emails\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const updateImageArr = async (url, tripID) => {\r\n  const docID = tripID;\r\n  let imageArr = await firestore.collection('trips').doc(docID);\r\n  const date = new Date();\r\n  const createdAt = date.toDateString();\r\n  // let item = {\r\n  //   url: url,\r\n  //   id: id,\r\n  //   createdAt: createdAt,\r\n  //   amount: imgAmount,\r\n  // };\r\n  try {\r\n    imageArr.update({\r\n      tripImages: firebase.firestore.FieldValue.arrayUnion(url),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding image', error);\r\n  }\r\n}\r\n\r\n//SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\r\nexport const  updateTripStatus = async (userID, tripID) => {\r\n  let user = await firestore.collection('users').doc(userID);\r\n  try {\r\n    user.update({\r\n      activeTrip: true,\r\n      trips: firebase.firestore.FieldValue.arrayUnion(tripID),\r\n      currentTrip: tripID,\r\n    });\r\n  } catch (error) {\r\n    console.log('Error creating trip', error);\r\n  }\r\n};\r\n\r\nexport const retrieveImages = async (user) => {\r\n  const { currentTrip } = user;\r\n  let tripImages = [];\r\n  try {\r\n    let ref = await firestore.collection('trips').doc(currentTrip).get();\r\n    let data = await ref.data();\r\n    tripImages = data.tripImages;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  return tripImages.reverse();\r\n};\r\n\r\nexport const findMyFriend = async (email) => {\r\n  let users = await userList()\r\n  let tripExist = false\r\n  users.map(el => {\r\n    if(el.email === email && el.activeTrip === true){\r\n      return tripExist = el.currentTrip\r\n    }\r\n  })\r\n  return tripExist\r\n};\r\n\r\nconst sentinel = async (data, upF) => {\r\n  const docID = '4mcO13n8lUBeSezFmLD1';\r\n\r\n  let doc = await firestore.collection('images').doc(docID);\r\n\r\n  let observer = await doc.onSnapshot(\r\n    async (docSnapshot) => {\r\n      let getDoc = await doc.get().then(async (doc) => {\r\n        if (!doc.exists) {\r\n          console.log('No such document!');\r\n        } else if (data.length !== doc.data().receiptImg.length) {\r\n          upF();\r\n        }\r\n      });\r\n    },\r\n    (err) => {\r\n      console.log(`Encountered error: ${err}`);\r\n    }\r\n  );\r\n};\r\n\r\nexport const receiptListArr = async (updateFunc) => {\r\n  const docID = '4mcO13n8lUBeSezFmLD1';\r\n  var receiptArr = [];\r\n  let arrRef = await firestore.collection('images').doc(docID);\r\n  let getDoc = await arrRef\r\n    .get()\r\n    .then((doc) => {\r\n      if (!doc.exists) {\r\n        console.log('No such document!');\r\n      } else {\r\n        receiptArr = doc.data().receiptImg;\r\n\r\n        sentinel(receiptArr, updateFunc);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log('Error getting document', err);\r\n    });\r\n\r\n  return receiptArr;\r\n};\r\n\r\n\r\n\r\nexport const updateReceiptArr = async (id, imgURL, imgAmount) => {\r\n  const docID = '4mcO13n8lUBeSezFmLD1';\r\n  let receiptArr = await firestore.collection('images').doc(docID);\r\n  const date = new Date();\r\n  const createdAt = date.toDateString();\r\n  let item = {\r\n    url: imgURL,\r\n    id: id,\r\n    createdAt: createdAt,\r\n    amount: imgAmount,\r\n  };\r\n\r\n  try {\r\n    receiptArr.update({\r\n      receiptImg: firebase.firestore.FieldValue.arrayUnion(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n};\r\n\r\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\r\n  const userRef = firestore.doc(`images/${id}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const imgUrl = imgURL;\r\n    const amount = imgAmount;\r\n    const date = new Date();\r\n    const createdAt = date.toDateString();\r\n\r\n    try {\r\n      await userRef.set({\r\n        imgUrl,\r\n        createdAt,\r\n        amount,\r\n      });\r\n    } catch (error) {\r\n      console.log('error saving receipt', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const updateTracking = async (user, item) => {\r\n  const { id } = user;\r\n  let stockArr = await firestore.collection('users').doc(id);\r\n\r\n  try {\r\n    stockArr.update({\r\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n};\r\n\r\nexport const deleteTracking = async (user, item) => {\r\n  const { id } = user;\r\n  let stockArr = await firestore.collection('users').doc(id);\r\n\r\n  try {\r\n    stockArr.update({\r\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error deleting stock', error);\r\n  }\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n  // console.log(auth.signInWithPopup(provider))\r\n};\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}