{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Chat/Chat.jsx\";\nimport React, { Component } from 'react';\nimport Talk from 'talkjs';\nimport { userList } from '../firebase/firebase.utils';\nimport './chat.css';\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n    this.state = {\n      groupUsers: ''\n    };\n  }\n\n  async componentDidMount() {\n    const setParticipants = users => {\n      let group = [];\n      users.map((el, i) => {\n        group[i] = new Talk.User({\n          id: el.id,\n          name: el.displayName,\n          email: el.email,\n          photoUrl: el.photoURL,\n          welcomeMessage: 'Hey there! How are you? :-)'\n        });\n      });\n      console.log(group);\n    };\n\n    const currentUser = this.props.currentUser;\n    let groupUsers = await userList();\n    this.setState({\n      groupUsers: groupUsers\n    });\n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email,\n        photoUrl: currentUser.photoURL,\n        welcomeMessage: 'Hey there! How are you? :-)'\n      });\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me\n      });\n      var other = new Talk.User({\n        id: '654321',\n        name: 'Sebastian',\n        email: 'Sebastian@example.com',\n        photoUrl: 'https://demo.talkjs.com/img/sebastian.jpg',\n        welcomeMessage: 'Hey, how can I help?'\n      });\n      let participants = setParticipants(this.state.groupUsers);\n      console.log(participants);\n      var conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, other));\n      conversation.setParticipant(me);\n      conversation.setParticipant(other);\n      var inbox = window.talkSession.createInbox({\n        selected: conversation\n      });\n      inbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    console.log(this.state.groupUsers);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox-container\",\n      ref: this.talkjsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Chat/Chat.jsx"],"names":["React","Component","Talk","userList","Chat","constructor","props","talkjsContainer","createRef","state","groupUsers","componentDidMount","setParticipants","users","group","map","el","i","User","id","name","displayName","email","photoUrl","photoURL","welcomeMessage","console","log","currentUser","setState","ready","then","me","window","talkSession","Session","appId","other","participants","conversation","getOrCreateConversation","oneOnOneId","setParticipant","inbox","createInbox","selected","mount","current","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,OAAO,YAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,eAAL,GAAuBP,KAAK,CAACQ,SAAN,EAAvB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AAExB,UAAMC,eAAe,GAAIC,KAAD,IAAW;AACnC,UAAIC,KAAK,GAAG,EAAZ;AAEGD,MAAAA,KAAK,CAACE,GAAN,CAAU,CAACC,EAAD,EAAKC,CAAL,KAAW;AAChBH,QAAAA,KAAK,CAACG,CAAD,CAAL,GAAW,IAAIf,IAAI,CAACgB,IAAT,CAAc;AACrBC,UAAAA,EAAE,EAAEH,EAAE,CAACG,EADc;AAErBC,UAAAA,IAAI,EAAEJ,EAAE,CAACK,WAFY;AAGrBC,UAAAA,KAAK,EAAEN,EAAE,CAACM,KAHW;AAIrBC,UAAAA,QAAQ,EAAEP,EAAE,CAACQ,QAJQ;AAKrBC,UAAAA,cAAc,EAAE;AALK,SAAd,CAAX;AAOJ,OARD;AAUAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AAEF,KAfD;;AAgBA,UAAMc,WAAW,GAAG,KAAKtB,KAAL,CAAWsB,WAA/B;AACA,QAAIlB,UAAU,GAAG,MAAMP,QAAQ,EAA/B;AAEA,SAAK0B,QAAL,CAAc;AACZnB,MAAAA,UAAU,EAAEA;AADA,KAAd;AAIAR,IAAAA,IAAI,CAAC4B,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,UAAIC,EAAE,GAAG,IAAI9B,IAAI,CAACgB,IAAT,CAAc;AACrBC,QAAAA,EAAE,EAAES,WAAW,CAACT,EADK;AAErBC,QAAAA,IAAI,EAAEQ,WAAW,CAACP,WAFG;AAGrBC,QAAAA,KAAK,EAAEM,WAAW,CAACN,KAHE;AAIrBC,QAAAA,QAAQ,EAAEK,WAAW,CAACJ,QAJD;AAKrBC,QAAAA,cAAc,EAAE;AALK,OAAd,CAAT;AAQAQ,MAAAA,MAAM,CAACC,WAAP,GAAqB,IAAIhC,IAAI,CAACiC,OAAT,CAAiB;AACpCC,QAAAA,KAAK,EAAE,UAD6B;AAEpCJ,QAAAA,EAAE,EAAEA;AAFgC,OAAjB,CAArB;AAIA,UAAIK,KAAK,GAAG,IAAInC,IAAI,CAACgB,IAAT,CAAc;AACxBC,QAAAA,EAAE,EAAE,QADoB;AAExBC,QAAAA,IAAI,EAAE,WAFkB;AAGxBE,QAAAA,KAAK,EAAE,uBAHiB;AAIxBC,QAAAA,QAAQ,EAAE,2CAJc;AAKxBE,QAAAA,cAAc,EAAE;AALQ,OAAd,CAAZ;AAQA,UAAIa,YAAY,GAAG1B,eAAe,CAAC,KAAKH,KAAL,CAAWC,UAAZ,CAAlC;AAEAgB,MAAAA,OAAO,CAACC,GAAR,CAAYW,YAAZ;AACA,UAAIC,YAAY,GAAGN,MAAM,CAACC,WAAP,CAAmBM,uBAAnB,CACjBtC,IAAI,CAACuC,UAAL,CAAgBT,EAAhB,EAAoBK,KAApB,CADiB,CAAnB;AAGAE,MAAAA,YAAY,CAACG,cAAb,CAA4BV,EAA5B;AACAO,MAAAA,YAAY,CAACG,cAAb,CAA4BL,KAA5B;AAEA,UAAIM,KAAK,GAAGV,MAAM,CAACC,WAAP,CAAmBU,WAAnB,CAA+B;AAAEC,QAAAA,QAAQ,EAAEN;AAAZ,OAA/B,CAAZ;AACAI,MAAAA,KAAK,CAACG,KAAN,CAAY,KAAKvC,eAAL,CAAqBwC,OAAjC;AACD,KAhCD;AAiCD;;AAEDC,EAAAA,MAAM,GAAG;AACPtB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWC,UAAvB;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,GAAG,EAAE,KAAKH,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAxEyC","sourcesContent":["import React, { Component } from 'react';\nimport Talk from 'talkjs';\nimport { userList } from '../firebase/firebase.utils';\n\nimport './chat.css';\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.talkjsContainer = React.createRef();\n    this.state = {\n      groupUsers: '',\n    };\n  }\n\n  async componentDidMount() {\n    \n    const setParticipants = (users) => {\n    let group = [] \n\n       users.map((el, i) => {\n            group[i] = new Talk.User({\n                id: el.id,\n                name: el.displayName,\n                email: el.email,\n                photoUrl: el.photoURL,\n                welcomeMessage: 'Hey there! How are you? :-)',\n              });\n       })\n\n       console.log(group)\n\n    }\n    const currentUser = this.props.currentUser;\n    let groupUsers = await userList();\n\n    this.setState({\n      groupUsers: groupUsers,\n    });\n\n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: currentUser.id,\n        name: currentUser.displayName,\n        email: currentUser.email,\n        photoUrl: currentUser.photoURL,\n        welcomeMessage: 'Hey there! How are you? :-)',\n      });\n\n      window.talkSession = new Talk.Session({\n        appId: 'taa7PJf6',\n        me: me,\n      });\n      var other = new Talk.User({\n        id: '654321',\n        name: 'Sebastian',\n        email: 'Sebastian@example.com',\n        photoUrl: 'https://demo.talkjs.com/img/sebastian.jpg',\n        welcomeMessage: 'Hey, how can I help?',\n      });\n\n      let participants = setParticipants(this.state.groupUsers)\n\n      console.log(participants)\n      var conversation = window.talkSession.getOrCreateConversation(\n        Talk.oneOnOneId(me, other)\n      );\n      conversation.setParticipant(me);\n      conversation.setParticipant(other);\n\n      var inbox = window.talkSession.createInbox({ selected: conversation });\n      inbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    console.log(this.state.groupUsers);\n    return <div className=\"chatbox-container\" ref={this.talkjsContainer}></div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}