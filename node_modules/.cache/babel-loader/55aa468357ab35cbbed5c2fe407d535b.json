{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Toast/toastMessage.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function ToastMessage(display) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    console.log('closing');\n\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  let decoy = {\n    display: true\n  };\n  console.log(display.display, decoy.display);\n  return ''; //   if(display!==undefined || display!==false ){\n  //     return (\n  //         <div className={classes.root}>\n  //           <Snackbar open={true} autoHideDuration={6000} onClose={ToastMessage(undefined)}>\n  //             <Alert onClose={handleClose} severity=\"success\">\n  //               Image uploaded successfully!\n  //             </Alert>\n  //           </Snackbar>\n  //           {/* <Alert severity=\"error\">This is an error message!</Alert>\n  //           <Alert severity=\"warning\">This is a warning message!</Alert>\n  //           <Alert severity=\"info\">This is an information message!</Alert>\n  //           <Alert severity=\"success\">This is a success message!</Alert> */}\n  //         </div>\n  //       );\n  //   }else {\n  //       return ''\n  //   }\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/Toast/toastMessage.jsx"],"names":["React","Button","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","ToastMessage","display","classes","open","setOpen","useState","handleClick","handleClose","event","reason","console","log","decoy"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC5C,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACF,QAAIF,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAPD;;AASA,MAAIQ,KAAK,GAAE;AACPX,IAAAA,OAAO,EAAE;AADF,GAAX;AAIAS,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAO,CAACA,OAApB,EAA6BW,KAAK,CAACX,OAAnC;AAEA,SACG,EADH,CAvB4C,CA4B9C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function ToastMessage(display) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n      console.log('closing')\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  let decoy= {\n      display: true\n  }\n\n  console.log(display.display, decoy.display)\n\n  return (\n     ''\n  );\n\n\n//   if(display!==undefined || display!==false ){\n    \n//     return (\n//         <div className={classes.root}>\n//           <Snackbar open={true} autoHideDuration={6000} onClose={ToastMessage(undefined)}>\n//             <Alert onClose={handleClose} severity=\"success\">\n//               Image uploaded successfully!\n//             </Alert>\n//           </Snackbar>\n//           {/* <Alert severity=\"error\">This is an error message!</Alert>\n//           <Alert severity=\"warning\">This is a warning message!</Alert>\n//           <Alert severity=\"info\">This is an information message!</Alert>\n//           <Alert severity=\"success\">This is a success message!</Alert> */}\n//         </div>\n//       );\n//   }else {\n//       return ''\n//   }\n\n  \n}"]},"metadata":{},"sourceType":"module"}