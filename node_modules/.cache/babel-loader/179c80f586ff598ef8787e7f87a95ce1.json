{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/groupImage/GroupImage.jsx\";\nimport React, { Component } from 'react';\nimport GroupImageFolder from './GroupImageFolder';\nimport { updateReceiptArr } from '../firebase/firebase.utils';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Grid from '@material-ui/core/Grid';\nimport ToastMessage from '../Toast/toastMessage';\nimport actions from '../../RouteContainer/axiosCalls';\nexport default class GroupImage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: \"\"\n    };\n\n    this.handleFileUpload = async e => {\n      console.log(\"The file to be uploaded is: \", e.target.files[0]);\n      const uploadData = new FormData(); // imageUrl => this name has to be the same as in the model since we pass\n      // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n      uploadData.append(\"imageUrl\", e.target.files[0]);\n      await actions.uploadToCD(uploadData).then(response => {\n        // console.log('response is: ', response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n        this.setState({\n          imageUrl: response.data.secure_url\n        });\n      }).catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n    };\n\n    this.handleSubmit = async () => {\n      await actions.uploadToDB(this.state);\n      this.setState({\n        imageUrl: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GroupImageFolder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\" // className={classes.button}\n      ,\n      startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }\n      }),\n      onClick: () => this.handleSubmit(this.state.imageUrl),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: \"uploadFile groupBtn\",\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: e => this.handleFileUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      size: \"small\",\n      component: \"span\",\n      className: \"groupBtn\",\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Upload\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/groupImage/GroupImage.jsx"],"names":["React","Component","GroupImageFolder","updateReceiptArr","axios","Button","CloudUploadIcon","SaveIcon","Grid","ToastMessage","actions","GroupImage","state","imageUrl","handleFileUpload","e","console","log","target","files","uploadData","FormData","append","uploadToCD","then","response","setState","data","secure_url","catch","err","handleSubmit","uploadToDB","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport GroupImageFolder from './GroupImageFolder'\nimport { updateReceiptArr } from '../firebase/firebase.utils';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Grid from '@material-ui/core/Grid';\nimport ToastMessage from '../Toast/toastMessage';\nimport actions from '../../RouteContainer/axiosCalls'\n\nexport default class GroupImage extends Component {\n\nstate = {\n          imageUrl: \"\"\n        };\n    \n\n    // this method handles just the file upload\n    handleFileUpload = async e => {\n        console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n        const uploadData = new FormData();\n        // imageUrl => this name has to be the same as in the model since we pass\n        // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n\n        await actions.uploadToCD(uploadData)\n        .then(response => {\n            // console.log('response is: ', response);\n            // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n            this.setState({ imageUrl: response.data.secure_url });\n          })\n          .catch(err => {\n            console.log(\"Error while uploading the file: \", err);\n          });\n        \n    }\n\n    // this method submits the form\n    handleSubmit = async () => {\n        await actions.uploadToDB(this.state) \n        \n        this.setState({\n            imageUrl: ''\n        })\n    }  \n\n\n    render() {\n\n        return (\n            <div>\n        <div className=\"table\">\n          <GroupImageFolder />\n        </div>\n\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            // className={classes.button}\n            startIcon={<SaveIcon />}\n            onClick={() => this.handleSubmit(this.state.imageUrl)}\n          >\n            Save\n          </Button>\n          <input\n            accept=\"image/*\"\n            className=\"uploadFile groupBtn\"\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={(e) => this.handleFileUpload(e)}\n          />\n          <label htmlFor=\"contained-button-file\">\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              size=\"small\"\n              component=\"span\"\n              className=\"groupBtn\"\n              startIcon={<CloudUploadIcon />}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n       {/* {\n         display ? <ToastMessage /> : ''\n       } */}\n        \n      </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}