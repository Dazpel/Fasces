{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/ReceiptView/Receipt.jsx\";\nimport React, { Component } from 'react';\nimport { saveReceipt } from '../firebase/firebase.utils';\nimport axios from 'axios';\nimport ReceiptTable from './ReceiptTable';\nlet MY_URL_KEY = '31bb9650994211eab7efc1191d38e165';\nexport default class Receipt extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: ''\n    };\n\n    this.getReceiptData = imageUrl => {\n      console.log(imageUrl);\n      let file = {\n        url: imageUrl,\n        headers: {\n          'x-custom-key': 'string'\n        }\n      };\n      axios.post('https://api.taggun.io/api/receipt/v1/simple/url', file, {\n        headers: {\n          apikey: MY_URL_KEY\n        }\n      }).then(function (response) {\n        console.log(response);\n        this.setState({\n          imageUrl: ''\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.uploadAndScan = async () => {\n      await this.getReceiptData(this.state.imageUrl);\n    };\n\n    this.handleFileUpload = e => {\n      console.log('The file to be uploaded is: ', e.target.files[0]);\n      const cloudName = 'dsxn0sfql';\n      const preset = 'w8mpx9l6';\n      let imgFile = e.target.files[0];\n      var url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n      var xhr = new XMLHttpRequest();\n      var fd = new FormData();\n      xhr.open('POST', url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n      xhr.onreadystatechange = e => {\n        if (xhr.readyState == 4 && xhr.status == 200) {\n          // File uploaded successfully\n          var response = JSON.parse(xhr.responseText); // https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg\n\n          var url = response.secure_url; // Create a thumbnail of the uploaded image, with 150px width\n\n          this.setState({\n            imageUrl: url\n          });\n        }\n      };\n\n      fd.append('upload_preset', preset);\n      fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary\n\n      fd.append('file', imgFile);\n      xhr.send(fd);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReceiptTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getReceiptData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: e => this.handleFileUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/alexander/Desktop/Ironhack/Paxanimi/src/Components/ReceiptView/Receipt.jsx"],"names":["React","Component","saveReceipt","axios","ReceiptTable","MY_URL_KEY","Receipt","state","imageUrl","getReceiptData","console","log","file","url","headers","post","apikey","then","response","setState","catch","error","uploadAndScan","handleFileUpload","e","target","files","cloudName","preset","imgFile","xhr","XMLHttpRequest","fd","FormData","open","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","secure_url","append","send","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {saveReceipt} from '../firebase/firebase.utils'\nimport axios from 'axios';\nimport ReceiptTable from './ReceiptTable';\n\nlet MY_URL_KEY = '31bb9650994211eab7efc1191d38e165';\n\nexport default class Receipt extends Component {\n\n  state = {\n    imageUrl: ''\n  }\n\n\n  getReceiptData = (imageUrl) => {\n    console.log(imageUrl)\n    let file = {\n      url: imageUrl,\n      headers: {\n        'x-custom-key': 'string',\n      },\n    };\n\n    axios\n      .post('https://api.taggun.io/api/receipt/v1/simple/url', file, {\n        headers: {\n          apikey: MY_URL_KEY,\n        },\n      })\n      .then(function (response) {\n        console.log(response);\n        this.setState({\n          imageUrl: ''\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  uploadAndScan = async () => {\n    \n    await this.getReceiptData(this.state.imageUrl)\n\n   \n\n  };\n\n  handleFileUpload = (e) => {\n    console.log('The file to be uploaded is: ', e.target.files[0]);\n    const cloudName = 'dsxn0sfql';\n    const preset = 'w8mpx9l6';\n    let imgFile = e.target.files[0];\n\n    var url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\n    var xhr = new XMLHttpRequest();\n    var fd = new FormData();\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    xhr.onreadystatechange = (e) => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        // File uploaded successfully\n        var response = JSON.parse(xhr.responseText);\n        // https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg\n        var url = response.secure_url;\n        // Create a thumbnail of the uploaded image, with 150px width\n        this.setState({\n          imageUrl: url\n        })\n\n        \n      }\n    };\n\n    fd.append('upload_preset', preset);\n    fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary\n    fd.append('file', imgFile);\n    xhr.send(fd);\n\n    \n  };\n\n  render() {\n    return (\n      <div>\n          <ReceiptTable  />\n        <button onClick={() => this.getReceiptData()}>Upload</button>\n        <input type=\"file\" onChange={(e) => this.handleFileUpload(e)} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}