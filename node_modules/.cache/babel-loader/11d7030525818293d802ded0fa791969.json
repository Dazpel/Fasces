{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\n  projectId: 'paxanimi-73b93',\n  storageBucket: 'paxanimi-73b93.appspot.com',\n  messagingSenderId: '852882682760',\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\n  measurementId: 'G-NB8J25CEJN'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = userAuth;\n    const createdAt = new Date();\n    const trackStock = [];\n    const activeTrip = false;\n\n    try {\n      await userRef.set({\n        activeTrip,\n        displayName,\n        email,\n        photoURL,\n        createdAt,\n        trackStock,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; //CREATE A NEW TRIP INSTANCE WITH ALL COMPOENTS EMPY\n\nexport const createNewTrip = async (user, tripName, id) => {\n  const tripRef = firestore.doc(`trips/${id}`);\n  const snapShot = await tripRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      email\n    } = user;\n    const createdAt = new Date();\n    const tripImages = [];\n    const tripReceipts = [];\n    const isActive = true;\n    const users = [email];\n\n    try {\n      await tripRef.set({\n        isActive,\n        createdAt,\n        tripName,\n        tripImages,\n        tripReceipts,\n        users\n      }); //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n\n      await updateTripStatus(user.id);\n    } catch (error) {\n      console.log('error creating trip', error.message);\n    }\n  }\n}; //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\n\nconst updateTripStatus = async userID => {\n  let user = await firestore.collection('users').doc(userID);\n\n  try {\n    user.update({\n      activeTrip: true\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\n\nexport const updateExpenses = async (userID, x) => {\n  let user = await firestore.collection('users').doc(userID);\n\n  try {\n    user.update({\n      expenses: expenses + x\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const userList = async () => {\n  let userArr = [];\n  let users = await firestore.collection('users').get();\n  users.docs.map((doc, i) => userArr[i] = {\n    id: doc.id,\n    ...doc.data()\n  });\n\n  if (userArr.length > 0) {\n    console.log(userArr);\n    return userArr;\n  }\n};\nexport const tripList = async () => {\n  let userArr = [];\n  let users = await firestore.collection('trips').get(); // users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\n\n  return users.docs; // if (userArr.length > 0) {\n  //   console.log(userArr);\n  //   return userArr;\n  // }\n};\n\nconst sentinel = async (data, upF) => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  let doc = await firestore.collection('images').doc(docID);\n  let observer = await doc.onSnapshot(async docSnapshot => {\n    let getDoc = await doc.get().then(async doc => {\n      if (!doc.exists) {\n        console.log('No such document!');\n      } else if (data.length !== doc.data().receiptImg.length) {\n        upF();\n      }\n    });\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n};\n\nexport const receiptListArr = async updateFunc => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  var receiptArr = [];\n  let arrRef = await firestore.collection('images').doc(docID);\n  let getDoc = await arrRef.get().then(doc => {\n    if (!doc.exists) {\n      console.log('No such document!');\n    } else {\n      receiptArr = doc.data().receiptImg;\n      sentinel(receiptArr, updateFunc);\n    }\n  }).catch(err => {\n    console.log('Error getting document', err);\n  });\n  return receiptArr;\n};\nexport const updateReceiptArr = async (id, imgURL, imgAmount) => {\n  const docID = '4mcO13n8lUBeSezFmLD1';\n  let receiptArr = await firestore.collection('images').doc(docID);\n  const date = new Date();\n  const createdAt = date.toDateString();\n  let item = {\n    url: imgURL,\n    id: id,\n    createdAt: createdAt,\n    amount: imgAmount\n  };\n\n  try {\n    receiptArr.update({\n      receiptImg: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\n  const userRef = firestore.doc(`images/${id}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const imgUrl = imgURL;\n    const amount = imgAmount;\n    const date = new Date();\n    const createdAt = date.toDateString();\n\n    try {\n      await userRef.set({\n        imgUrl,\n        createdAt,\n        amount\n      });\n    } catch (error) {\n      console.log('error saving receipt', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const updateTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item)\n    });\n  } catch (error) {\n    console.log('Error adding stock', error);\n  }\n};\nexport const deleteTracking = async (user, item) => {\n  const {\n    id\n  } = user;\n  let stockArr = await firestore.collection('users').doc(id);\n\n  try {\n    stockArr.update({\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item)\n    });\n  } catch (error) {\n    console.log('Error deleting stock', error);\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider); // console.log(auth.signInWithPopup(provider))\n};\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Billy's PC/Desktop/Fasces/src/Components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","photoURL","createdAt","Date","trackStock","activeTrip","set","error","console","log","message","createNewTrip","user","tripName","id","tripRef","tripImages","tripReceipts","isActive","users","updateTripStatus","userID","collection","update","updateExpenses","x","expenses","userList","userArr","docs","map","i","data","length","tripList","sentinel","upF","docID","observer","onSnapshot","docSnapshot","getDoc","then","receiptImg","err","receiptListArr","updateFunc","receiptArr","arrRef","catch","updateReceiptArr","imgURL","imgAmount","date","toDateString","item","url","amount","FieldValue","arrayUnion","saveReceipt","imgUrl","updateTracking","stockArr","deleteTracking","arrayRemove","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC;AAGbC,EAAAA,WAAW,EAAE,uCAHA;AAIbC,EAAAA,SAAS,EAAE,gBAJE;AAKbC,EAAAA,aAAa,EAAE,4BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA;AAAtB,QAAmCX,QAAzC;AACA,UAAMY,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAG,KAAnB;;AAEA,QAAI;AACF,YAAMb,OAAO,CAACc,GAAR,CAAY;AAChBD,QAAAA,UADgB;AAEhBN,QAAAA,WAFgB;AAGhBC,QAAAA,KAHgB;AAIhBC,QAAAA,QAJgB;AAKhBC,QAAAA,SALgB;AAMhBE,QAAAA,UANgB;AAOhB,WAAGb;AAPa,OAAZ,CAAN;AASD,KAVD,CAUE,OAAOgB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AACD,SAAOlB,OAAP;AACD,CA5BM,C,CA+BP;;AACA,OAAO,MAAMmB,aAAa,GAAG,OAAOC,IAAP,EAAaC,QAAb,EAAuBC,EAAvB,KAA8B;AACzD,QAAMC,OAAO,GAAGtB,SAAS,CAACC,GAAV,CAAe,SAAQoB,EAAG,EAA1B,CAAhB;AAEA,QAAMlB,QAAQ,GAAG,MAAMmB,OAAO,CAAClB,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEE,MAAAA;AAAF,QAAYY,IAAlB;AACA,UAAMV,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,UAAMa,UAAU,GAAG,EAAnB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,QAAQ,GAAG,IAAjB;AACA,UAAMC,KAAK,GAAG,CAACnB,KAAD,CAAd;;AAEA,QAAI;AACF,YAAMe,OAAO,CAACT,GAAR,CAAY;AAChBY,QAAAA,QADgB;AAEhBhB,QAAAA,SAFgB;AAGhBW,QAAAA,QAHgB;AAIhBG,QAAAA,UAJgB;AAKhBC,QAAAA,YALgB;AAMhBE,QAAAA;AANgB,OAAZ,CAAN,CADE,CASF;;AACA,YAAMC,gBAAgB,CAACR,IAAI,CAACE,EAAN,CAAtB;AACD,KAXD,CAWE,OAAOP,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;AAEF,CA7BM,C,CAgCP;;AACA,MAAMU,gBAAgB,GAAG,MAAOC,MAAP,IAAkB;AAEzC,MAAIT,IAAI,GAAG,MAAMnB,SAAS,CAAC6B,UAAV,CAAqB,OAArB,EAA8B5B,GAA9B,CAAkC2B,MAAlC,CAAjB;;AAEA,MAAI;AACFT,IAAAA,IAAI,CAACW,MAAL,CAAY;AACVlB,MAAAA,UAAU,EAAE;AADF,KAAZ;AAGD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;AACD;AAEF,CAZD;;AAcA,OAAO,MAAMiB,cAAc,GAAG,OAAOH,MAAP,EAAeI,CAAf,KAAqB;AAEjD,MAAIb,IAAI,GAAG,MAAMnB,SAAS,CAAC6B,UAAV,CAAqB,OAArB,EAA8B5B,GAA9B,CAAkC2B,MAAlC,CAAjB;;AAEA,MAAI;AACFT,IAAAA,IAAI,CAACW,MAAL,CAAY;AACVG,MAAAA,QAAQ,EAAEA,QAAQ,GAAGD;AADX,KAAZ;AAGD,GAJD,CAIE,OAAOlB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;AACD;AAEF,CAZM;AAcP,OAAO,MAAMoB,QAAQ,GAAG,YAAY;AAClC,MAAIC,OAAO,GAAG,EAAd;AAEA,MAAIT,KAAK,GAAG,MAAM1B,SAAS,CAAC6B,UAAV,CAAqB,OAArB,EAA8BzB,GAA9B,EAAlB;AACAsB,EAAAA,KAAK,CAACU,IAAN,CAAWC,GAAX,CAAe,CAACpC,GAAD,EAAMqC,CAAN,KAAaH,OAAO,CAACG,CAAD,CAAP,GAAa;AAAEjB,IAAAA,EAAE,EAAEpB,GAAG,CAACoB,EAAV;AAAc,OAAGpB,GAAG,CAACsC,IAAJ;AAAjB,GAAzC;;AAEA,MAAIJ,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB;AACtBzB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,OAAZ;AACA,WAAOA,OAAP;AACD;AACF,CAVM;AAYP,OAAO,MAAMM,QAAQ,GAAG,YAAY;AAClC,MAAIN,OAAO,GAAG,EAAd;AAEA,MAAIT,KAAK,GAAG,MAAM1B,SAAS,CAAC6B,UAAV,CAAqB,OAArB,EAA8BzB,GAA9B,EAAlB,CAHkC,CAIlC;;AACA,SAAOsB,KAAK,CAACU,IAAb,CALkC,CAMlC;AACA;AACA;AACA;AACD,CAVM;;AAYP,MAAMM,QAAQ,GAAG,OAAOH,IAAP,EAAaI,GAAb,KAAqB;AACpC,QAAMC,KAAK,GAAG,sBAAd;AAEA,MAAI3C,GAAG,GAAG,MAAMD,SAAS,CAAC6B,UAAV,CAAqB,QAArB,EAA+B5B,GAA/B,CAAmC2C,KAAnC,CAAhB;AAEA,MAAIC,QAAQ,GAAG,MAAM5C,GAAG,CAAC6C,UAAJ,CACnB,MAAOC,WAAP,IAAuB;AACrB,QAAIC,MAAM,GAAG,MAAM/C,GAAG,CAACG,GAAJ,GAAU6C,IAAV,CAAe,MAAOhD,GAAP,IAAe;AAC/C,UAAI,CAACA,GAAG,CAACI,MAAT,EAAiB;AACfU,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,OAFD,MAEO,IAAIuB,IAAI,CAACC,MAAL,KAAgBvC,GAAG,CAACsC,IAAJ,GAAWW,UAAX,CAAsBV,MAA1C,EAAkD;AACvDG,QAAAA,GAAG;AACJ;AACF,KANkB,CAAnB;AAOD,GATkB,EAUlBQ,GAAD,IAAS;AACPpC,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBmC,GAAI,EAAtC;AACD,GAZkB,CAArB;AAcD,CAnBD;;AAqBA,OAAO,MAAMC,cAAc,GAAG,MAAOC,UAAP,IAAsB;AAClD,QAAMT,KAAK,GAAG,sBAAd;AACA,MAAIU,UAAU,GAAG,EAAjB;AACA,MAAIC,MAAM,GAAG,MAAMvD,SAAS,CAAC6B,UAAV,CAAqB,QAArB,EAA+B5B,GAA/B,CAAmC2C,KAAnC,CAAnB;AACA,MAAII,MAAM,GAAG,MAAMO,MAAM,CACtBnD,GADgB,GAEhB6C,IAFgB,CAEVhD,GAAD,IAAS;AACb,QAAI,CAACA,GAAG,CAACI,MAAT,EAAiB;AACfU,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAFD,MAEO;AACLsC,MAAAA,UAAU,GAAGrD,GAAG,CAACsC,IAAJ,GAAWW,UAAxB;AAEAR,MAAAA,QAAQ,CAACY,UAAD,EAAaD,UAAb,CAAR;AACD;AACF,GAVgB,EAWhBG,KAXgB,CAWTL,GAAD,IAAS;AACdpC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCmC,GAAtC;AACD,GAbgB,CAAnB;AAeA,SAAOG,UAAP;AACD,CApBM;AAwBP,OAAO,MAAMG,gBAAgB,GAAG,OAAOpC,EAAP,EAAWqC,MAAX,EAAmBC,SAAnB,KAAiC;AAC/D,QAAMf,KAAK,GAAG,sBAAd;AACA,MAAIU,UAAU,GAAG,MAAMtD,SAAS,CAAC6B,UAAV,CAAqB,QAArB,EAA+B5B,GAA/B,CAAmC2C,KAAnC,CAAvB;AACA,QAAMgB,IAAI,GAAG,IAAIlD,IAAJ,EAAb;AACA,QAAMD,SAAS,GAAGmD,IAAI,CAACC,YAAL,EAAlB;AACA,MAAIC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAEL,MADI;AAETrC,IAAAA,EAAE,EAAEA,EAFK;AAGTZ,IAAAA,SAAS,EAAEA,SAHF;AAITuD,IAAAA,MAAM,EAAEL;AAJC,GAAX;;AAOA,MAAI;AACFL,IAAAA,UAAU,CAACxB,MAAX,CAAkB;AAChBoB,MAAAA,UAAU,EAAEhE,QAAQ,CAACc,SAAT,CAAmBiE,UAAnB,CAA8BC,UAA9B,CAAyCJ,IAAzC;AADI,KAAlB;AAGD,GAJD,CAIE,OAAOhD,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;AACD;AACF,CAnBM;AAqBP,OAAO,MAAMqD,WAAW,GAAG,OAAO9C,EAAP,EAAWqC,MAAX,EAAmBC,SAAnB,KAAiC;AAC1D,QAAM5D,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,UAASoB,EAAG,EAA3B,CAAhB;AAEA,QAAMlB,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM+D,MAAM,GAAGV,MAAf;AACA,UAAMM,MAAM,GAAGL,SAAf;AACA,UAAMC,IAAI,GAAG,IAAIlD,IAAJ,EAAb;AACA,UAAMD,SAAS,GAAGmD,IAAI,CAACC,YAAL,EAAlB;;AAEA,QAAI;AACF,YAAM9D,OAAO,CAACc,GAAR,CAAY;AAChBuD,QAAAA,MADgB;AAEhB3D,QAAAA,SAFgB;AAGhBuD,QAAAA;AAHgB,OAAZ,CAAN;AAKD,KAND,CAME,OAAOlD,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAACG,OAA1C;AACD;AACF;;AACD,SAAOlB,OAAP;AACD,CAtBM;AAwBP,OAAO,MAAMsE,cAAc,GAAG,OAAOlD,IAAP,EAAa2C,IAAb,KAAsB;AAClD,QAAM;AAAEzC,IAAAA;AAAF,MAASF,IAAf;AACA,MAAImD,QAAQ,GAAG,MAAMtE,SAAS,CAAC6B,UAAV,CAAqB,OAArB,EAA8B5B,GAA9B,CAAkCoB,EAAlC,CAArB;;AAEA,MAAI;AACFiD,IAAAA,QAAQ,CAACxC,MAAT,CAAgB;AACdnB,MAAAA,UAAU,EAAEzB,QAAQ,CAACc,SAAT,CAAmBiE,UAAnB,CAA8BC,UAA9B,CAAyCJ,IAAzC;AADE,KAAhB;AAGD,GAJD,CAIE,OAAOhD,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;AACD;AACF,CAXM;AAaP,OAAO,MAAMyD,cAAc,GAAG,OAAOpD,IAAP,EAAa2C,IAAb,KAAsB;AAClD,QAAM;AAAEzC,IAAAA;AAAF,MAASF,IAAf;AACA,MAAImD,QAAQ,GAAG,MAAMtE,SAAS,CAAC6B,UAAV,CAAqB,OAArB,EAA8B5B,GAA9B,CAAkCoB,EAAlC,CAArB;;AAEA,MAAI;AACFiD,IAAAA,QAAQ,CAACxC,MAAT,CAAgB;AACdnB,MAAAA,UAAU,EAAEzB,QAAQ,CAACc,SAAT,CAAmBiE,UAAnB,CAA8BO,WAA9B,CAA0CV,IAA1C;AADE,KAAhB;AAGD,GAJD,CAIE,OAAOhD,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACD;AACF,CAXM;AAaP5B,QAAQ,CAACuF,aAAT,CAAuBtF,MAAvB;AAEA,OAAO,MAAMuF,IAAI,GAAGxF,QAAQ,CAACwF,IAAT,EAAb;AACP,OAAO,MAAM1E,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAM2E,QAAQ,GAAG,IAAIzF,QAAQ,CAACwF,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpCL,EAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,EADoC,CAEpC;AACD,CAHM;AAKP,eAAezF,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBfylPGB3Vj9XqeRAe6K7n_48vjIv8Z0wU',\r\n  authDomain: 'paxanimi-73b93.firebaseapp.com',\r\n  databaseURL: 'https://paxanimi-73b93.firebaseio.com',\r\n  projectId: 'paxanimi-73b93',\r\n  storageBucket: 'paxanimi-73b93.appspot.com',\r\n  messagingSenderId: '852882682760',\r\n  appId: '1:852882682760:web:415f87c7be9f7eb4a6c03d',\r\n  measurementId: 'G-NB8J25CEJN',\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email, photoURL } = userAuth;\r\n    const createdAt = new Date();\r\n    const trackStock = [];\r\n    const activeTrip = false;\r\n\r\n    try {\r\n      await userRef.set({\r\n        activeTrip,\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n        createdAt,\r\n        trackStock,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\n\r\n//CREATE A NEW TRIP INSTANCE WITH ALL COMPOENTS EMPY\r\nexport const createNewTrip = async (user, tripName, id) => {\r\n  const tripRef = firestore.doc(`trips/${id}`);\r\n\r\n  const snapShot = await tripRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { email } = user;\r\n    const createdAt = new Date();\r\n    const tripImages = [];\r\n    const tripReceipts = []\r\n    const isActive = true;\r\n    const users = [email]\r\n\r\n    try {\r\n      await tripRef.set({\r\n        isActive,\r\n        createdAt,\r\n        tripName,\r\n        tripImages,\r\n        tripReceipts,\r\n        users\r\n      });\r\n      //SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\r\n      await updateTripStatus(user.id)\r\n    } catch (error) {\r\n      console.log('error creating trip', error.message);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n//SET USER AS ACTIVE IN A TRIP SO HE CANT CREATE A NEW ONE AND BE ABLE TO HAVE FRIENDS JOIN\r\nconst updateTripStatus = async (userID) => {\r\n\r\n  let user = await firestore.collection('users').doc(userID);\r\n\r\n  try {\r\n    user.update({\r\n      activeTrip: true,\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n\r\n}\r\n\r\nexport const updateExpenses = async (userID, x) => {\r\n\r\n  let user = await firestore.collection('users').doc(userID);\r\n\r\n  try {\r\n    user.update({\r\n      expenses: expenses + x,\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n\r\n}\r\n\r\nexport const userList = async () => {\r\n  let userArr = [];\r\n\r\n  let users = await firestore.collection('users').get();\r\n  users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\r\n\r\n  if (userArr.length > 0) {\r\n    console.log(userArr);\r\n    return userArr;\r\n  }\r\n};\r\n\r\nexport const tripList = async () => {\r\n  let userArr = [];\r\n\r\n  let users = await firestore.collection('trips').get();\r\n  // users.docs.map((doc, i) => (userArr[i] = { id: doc.id, ...doc.data() }));\r\n  return users.docs\r\n  // if (userArr.length > 0) {\r\n  //   console.log(userArr);\r\n  //   return userArr;\r\n  // }\r\n};\r\n\r\nconst sentinel = async (data, upF) => {\r\n  const docID = '4mcO13n8lUBeSezFmLD1';\r\n\r\n  let doc = await firestore.collection('images').doc(docID);\r\n\r\n  let observer = await doc.onSnapshot(\r\n    async (docSnapshot) => {\r\n      let getDoc = await doc.get().then(async (doc) => {\r\n        if (!doc.exists) {\r\n          console.log('No such document!');\r\n        } else if (data.length !== doc.data().receiptImg.length) {\r\n          upF();\r\n        }\r\n      });\r\n    },\r\n    (err) => {\r\n      console.log(`Encountered error: ${err}`);\r\n    }\r\n  );\r\n};\r\n\r\nexport const receiptListArr = async (updateFunc) => {\r\n  const docID = '4mcO13n8lUBeSezFmLD1';\r\n  var receiptArr = [];\r\n  let arrRef = await firestore.collection('images').doc(docID);\r\n  let getDoc = await arrRef\r\n    .get()\r\n    .then((doc) => {\r\n      if (!doc.exists) {\r\n        console.log('No such document!');\r\n      } else {\r\n        receiptArr = doc.data().receiptImg;\r\n\r\n        sentinel(receiptArr, updateFunc);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log('Error getting document', err);\r\n    });\r\n\r\n  return receiptArr;\r\n};\r\n\r\n\r\n\r\nexport const updateReceiptArr = async (id, imgURL, imgAmount) => {\r\n  const docID = '4mcO13n8lUBeSezFmLD1';\r\n  let receiptArr = await firestore.collection('images').doc(docID);\r\n  const date = new Date();\r\n  const createdAt = date.toDateString();\r\n  let item = {\r\n    url: imgURL,\r\n    id: id,\r\n    createdAt: createdAt,\r\n    amount: imgAmount,\r\n  };\r\n\r\n  try {\r\n    receiptArr.update({\r\n      receiptImg: firebase.firestore.FieldValue.arrayUnion(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n};\r\n\r\nexport const saveReceipt = async (id, imgURL, imgAmount) => {\r\n  const userRef = firestore.doc(`images/${id}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const imgUrl = imgURL;\r\n    const amount = imgAmount;\r\n    const date = new Date();\r\n    const createdAt = date.toDateString();\r\n\r\n    try {\r\n      await userRef.set({\r\n        imgUrl,\r\n        createdAt,\r\n        amount,\r\n      });\r\n    } catch (error) {\r\n      console.log('error saving receipt', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const updateTracking = async (user, item) => {\r\n  const { id } = user;\r\n  let stockArr = await firestore.collection('users').doc(id);\r\n\r\n  try {\r\n    stockArr.update({\r\n      trackStock: firebase.firestore.FieldValue.arrayUnion(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error adding stock', error);\r\n  }\r\n};\r\n\r\nexport const deleteTracking = async (user, item) => {\r\n  const { id } = user;\r\n  let stockArr = await firestore.collection('users').doc(id);\r\n\r\n  try {\r\n    stockArr.update({\r\n      trackStock: firebase.firestore.FieldValue.arrayRemove(item),\r\n    });\r\n  } catch (error) {\r\n    console.log('Error deleting stock', error);\r\n  }\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n  // console.log(auth.signInWithPopup(provider))\r\n};\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}