{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Billy's PC\\\\Desktop\\\\Fasces\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { auth, createUserProfileDocument } from './Components/firebase/firebase.utils';\nimport Home from './Components/Home/Home';\nimport './App.css';\nimport LogIn from './Components/LogIn/LogIn';\nimport Groups from './Components/Groups/Groups';\nimport CreateGroup from './Components/Groups/CreateGroup';\nimport Navbar from './Components/navbar/Navbar';\nimport Topbar from './Components/navbar/Topbar';\nimport Chat from './Components/Chat/Chat';\nimport Receipt from './Components/ReceiptView/Receipt';\nimport Calculate from './Components/Algorithm/Calculate';\nimport ProfileView from './Components/Profile/ProfileView';\nimport AccountView from './Components/Profile/AccountView';\nimport GroupImage from './Components/groupImage/GroupImage';\nimport Trip from './Components/Trip/trip';\nimport NewHome from './Components/NewHome/NewHome';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: '',\n      isData: false,\n      onTrip: false\n    };\n    this.unsubscribeFromAuth = null;\n\n    this.componentDidMount = () => {\n      //Call auth method from Firebase to check whether or not we have an active session\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        //Check if user logged in\n        if (userAuth) {\n          //If logged in, retrieve the data from user and set it to State\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot(snapShot => {\n            let status = snapShot.data();\n            this.setState({\n              currentUser: {\n                id: snapShot.id,\n                ...snapShot.data()\n              },\n              isData: true,\n              onTrip: status.isActive\n            });\n          });\n        } //If logged out, clean state and set user to null\n        else {\n            this.setState({\n              currentUser: userAuth,\n              isData: false\n            });\n          }\n      });\n    };\n  }\n\n  //On log out clean session data and set it to null\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  /* END OF TRACKING USER STATUS*/\n\n  /* START OF TRACK IF USER LOGGED IN OR NOT, PASS DOWN TO ALL COMPONENTS */\n\n\n  render() {\n    const {\n      currentUser,\n      isData,\n      onTrip\n    } = this.state;\n    console.log(onTrip);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/newhome\",\n      component: props => /*#__PURE__*/React.createElement(NewHome, Object.assign({}, props, {\n        currentUser: currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/chat/:id\",\n      component: props => /*#__PURE__*/React.createElement(Chat, Object.assign({}, props, {\n        currentUser: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/home/receipt\",\n      component: props => /*#__PURE__*/React.createElement(Receipt, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 35\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/home/image\",\n      component: props => /*#__PURE__*/React.createElement(GroupImage, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 35\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/Calculate\",\n      component: props => /*#__PURE__*/React.createElement(Calculate, Object.assign({}, props, {\n        currentUser: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/Profile\",\n      component: props => /*#__PURE__*/React.createElement(ProfileView, Object.assign({}, props, {\n        currentUser: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/Account\",\n      component: props => /*#__PURE__*/React.createElement(AccountView, Object.assign({}, props, {\n        currentUser: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: props => isData ? onTrip ? /*#__PURE__*/React.createElement(NewHome, Object.assign({}, props, {\n        currentUser: currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 27\n        }\n      })) : /*#__PURE__*/React.createElement(Trip, Object.assign({}, props, {\n        currentUser: currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 77\n        }\n      })) : /*#__PURE__*/React.createElement(LogIn, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: props => /*#__PURE__*/React.createElement(LogIn, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 35\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/groups\",\n      component: props => /*#__PURE__*/React.createElement(Groups, Object.assign({}, props, {\n        currentUser: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/creategroup\",\n      component: props => /*#__PURE__*/React.createElement(CreateGroup, Object.assign({}, props, {\n        currentUser: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Billy's PC/Desktop/Fasces/src/App.js"],"names":["React","Component","Switch","Route","auth","createUserProfileDocument","Home","LogIn","Groups","CreateGroup","Navbar","Topbar","Chat","Receipt","Calculate","ProfileView","AccountView","GroupImage","Trip","NewHome","App","state","currentUser","isData","onTrip","unsubscribeFromAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","status","data","setState","id","isActive","componentWillUnmount","render","console","log","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n} from './Components/firebase/firebase.utils';\r\nimport Home from './Components/Home/Home';\r\nimport './App.css';\r\nimport LogIn from './Components/LogIn/LogIn';\r\nimport Groups from './Components/Groups/Groups';\r\nimport CreateGroup from './Components/Groups/CreateGroup';\r\nimport Navbar from './Components/navbar/Navbar';\r\nimport Topbar from './Components/navbar/Topbar';\r\nimport Chat from './Components/Chat/Chat';\r\nimport Receipt from './Components/ReceiptView/Receipt';\r\nimport Calculate from './Components/Algorithm/Calculate';\r\nimport ProfileView from './Components/Profile/ProfileView';\r\nimport AccountView from './Components/Profile/AccountView';\r\nimport GroupImage from './Components/groupImage/GroupImage';\r\nimport Trip from './Components/Trip/trip'\r\nimport NewHome from './Components/NewHome/NewHome'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    currentUser: '',\r\n    isData: false,\r\n    onTrip: false,\r\n  };\r\n\r\n  //method to set session to null.\r\n  unsubscribeFromAuth = null;\r\n\r\n  componentDidMount = () => {\r\n    //Call auth method from Firebase to check whether or not we have an active session\r\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\r\n      //Check if user logged in\r\n      if (userAuth) {\r\n        //If logged in, retrieve the data from user and set it to State\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n\r\n        userRef.onSnapshot((snapShot) => {\r\n          let status = snapShot.data()\r\n          this.setState({\r\n            currentUser: {\r\n              id: snapShot.id,\r\n              ...snapShot.data(),\r\n            },\r\n            isData: true,\r\n            onTrip: status.isActive\r\n          });\r\n        });\r\n      }\r\n      //If logged out, clean state and set user to null\r\n      else {\r\n        this.setState({ currentUser: userAuth, isData: false });\r\n      }\r\n    });\r\n  };\r\n\r\n  //On log out clean session data and set it to null\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromAuth();\r\n  }\r\n  /* END OF TRACKING USER STATUS*/\r\n  /* START OF TRACK IF USER LOGGED IN OR NOT, PASS DOWN TO ALL COMPONENTS */\r\n\r\n  render() {\r\n    const { currentUser, isData, onTrip } = this.state;\r\n    console.log(onTrip)\r\n    return (\r\n      <div>\r\n        <Switch>\r\n        <Route\r\n            exact\r\n            path=\"/newhome\"\r\n            component={(props) => (\r\n              <NewHome {...props} currentUser={currentUser}/>\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/chat/:id\"\r\n            component={(props) => (\r\n              <Chat {...props} currentUser={this.state.currentUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/home/receipt\"\r\n            component={(props) => <Receipt {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/home/image\"\r\n            component={(props) => <GroupImage {...props} />}\r\n          />\r\n          <Route\r\n            path=\"/Calculate\"\r\n            component={(props) => (\r\n              <Calculate {...props} currentUser={this.state.currentUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/Profile\"\r\n            component={(props) => (\r\n              <ProfileView {...props} currentUser={this.state.currentUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/Account\"\r\n            component={(props) => (\r\n              <AccountView {...props} currentUser={this.state.currentUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={(props) =>\r\n              isData \r\n              ? (\r\n                onTrip ?  <NewHome {...props} currentUser={currentUser}/> : <Trip {...props} currentUser={currentUser} /> \r\n              ) \r\n              : (\r\n                <LogIn {...props} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/login\"\r\n            component={(props) => <LogIn {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/groups\"\r\n            component={(props) => (\r\n              <Groups {...props} currentUser={this.state.currentUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/creategroup\"\r\n            component={(props) => (\r\n              <CreateGroup {...props} currentUser={this.state.currentUser} />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}